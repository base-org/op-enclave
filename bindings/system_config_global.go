// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package bindings

import (
	"errors"
	"math/big"
	"strings"

	ethereum "github.com/ethereum/go-ethereum"
	"github.com/ethereum/go-ethereum/accounts/abi"
	"github.com/ethereum/go-ethereum/accounts/abi/bind"
	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/core/types"
	"github.com/ethereum/go-ethereum/event"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = errors.New
	_ = big.NewInt
	_ = strings.NewReader
	_ = ethereum.NotFound
	_ = bind.Bind
	_ = common.Big1
	_ = types.BloomLookup
	_ = event.NewSubscription
	_ = abi.ConvertType
)

// NitroValidatorPtrs is an auto generated low-level Go binding around an user-defined struct.
type NitroValidatorPtrs struct {
	ModuleID  *big.Int
	Timestamp uint64
	Digest    *big.Int
	Pcrs      []*big.Int
	Cert      *big.Int
	Cabundle  []*big.Int
	PublicKey *big.Int
	UserData  *big.Int
	Nonce     *big.Int
}

// SystemConfigGlobalMetaData contains all meta data concerning the SystemConfigGlobal contract.
var SystemConfigGlobalMetaData = &bind.MetaData{
	ABI: "[{\"type\":\"constructor\",\"inputs\":[{\"name\":\"certManager\",\"type\":\"address\",\"internalType\":\"contractICertManager\"}],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"ATTESTATION_DIGEST\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\",\"internalType\":\"bytes32\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"ATTESTATION_TBS_PREFIX\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\",\"internalType\":\"bytes32\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"CABUNDLE_KEY\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\",\"internalType\":\"bytes32\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"CERTIFICATE_KEY\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\",\"internalType\":\"bytes32\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"DIGEST_KEY\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\",\"internalType\":\"bytes32\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"MAX_AGE\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"uint256\",\"internalType\":\"uint256\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"MODULE_ID_KEY\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\",\"internalType\":\"bytes32\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"NONCE_KEY\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\",\"internalType\":\"bytes32\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"PCRS_KEY\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\",\"internalType\":\"bytes32\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"PUBLIC_KEY_KEY\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\",\"internalType\":\"bytes32\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"TIMESTAMP_KEY\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\",\"internalType\":\"bytes32\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"USER_DATA_KEY\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\",\"internalType\":\"bytes32\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"certManager\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"address\",\"internalType\":\"contractICertManager\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"decodeAttestationTbs\",\"inputs\":[{\"name\":\"attestation\",\"type\":\"bytes\",\"internalType\":\"bytes\"}],\"outputs\":[{\"name\":\"attestationTbs\",\"type\":\"bytes\",\"internalType\":\"bytes\"},{\"name\":\"signature\",\"type\":\"bytes\",\"internalType\":\"bytes\"}],\"stateMutability\":\"pure\"},{\"type\":\"function\",\"name\":\"deregisterPCR0\",\"inputs\":[{\"name\":\"pcr0\",\"type\":\"bytes\",\"internalType\":\"bytes\"}],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"deregisterSigner\",\"inputs\":[{\"name\":\"signer\",\"type\":\"address\",\"internalType\":\"address\"}],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"initialize\",\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\",\"internalType\":\"address\"}],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"owner\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"address\",\"internalType\":\"address\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"proposer\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"address\",\"internalType\":\"address\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"registerPCR0\",\"inputs\":[{\"name\":\"pcr0\",\"type\":\"bytes\",\"internalType\":\"bytes\"}],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"registerSigner\",\"inputs\":[{\"name\":\"attestationTbs\",\"type\":\"bytes\",\"internalType\":\"bytes\"},{\"name\":\"signature\",\"type\":\"bytes\",\"internalType\":\"bytes\"}],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"renounceOwnership\",\"inputs\":[],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"setProposer\",\"inputs\":[{\"name\":\"_proposer\",\"type\":\"address\",\"internalType\":\"address\"}],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"transferOwnership\",\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\",\"internalType\":\"address\"}],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"validPCR0s\",\"inputs\":[{\"name\":\"\",\"type\":\"bytes32\",\"internalType\":\"bytes32\"}],\"outputs\":[{\"name\":\"\",\"type\":\"bool\",\"internalType\":\"bool\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"validSigners\",\"inputs\":[{\"name\":\"\",\"type\":\"address\",\"internalType\":\"address\"}],\"outputs\":[{\"name\":\"\",\"type\":\"bool\",\"internalType\":\"bool\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"validateAttestation\",\"inputs\":[{\"name\":\"attestationTbs\",\"type\":\"bytes\",\"internalType\":\"bytes\"},{\"name\":\"signature\",\"type\":\"bytes\",\"internalType\":\"bytes\"}],\"outputs\":[{\"name\":\"\",\"type\":\"tuple\",\"internalType\":\"structNitroValidator.Ptrs\",\"components\":[{\"name\":\"moduleID\",\"type\":\"uint256\",\"internalType\":\"CborElement\"},{\"name\":\"timestamp\",\"type\":\"uint64\",\"internalType\":\"uint64\"},{\"name\":\"digest\",\"type\":\"uint256\",\"internalType\":\"CborElement\"},{\"name\":\"pcrs\",\"type\":\"uint256[]\",\"internalType\":\"CborElement[]\"},{\"name\":\"cert\",\"type\":\"uint256\",\"internalType\":\"CborElement\"},{\"name\":\"cabundle\",\"type\":\"uint256[]\",\"internalType\":\"CborElement[]\"},{\"name\":\"publicKey\",\"type\":\"uint256\",\"internalType\":\"CborElement\"},{\"name\":\"userData\",\"type\":\"uint256\",\"internalType\":\"CborElement\"},{\"name\":\"nonce\",\"type\":\"uint256\",\"internalType\":\"CborElement\"}]}],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"version\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"string\",\"internalType\":\"string\"}],\"stateMutability\":\"pure\"},{\"type\":\"event\",\"name\":\"Initialized\",\"inputs\":[{\"name\":\"version\",\"type\":\"uint8\",\"indexed\":false,\"internalType\":\"uint8\"}],\"anonymous\":false},{\"type\":\"event\",\"name\":\"OwnershipTransferred\",\"inputs\":[{\"name\":\"previousOwner\",\"type\":\"address\",\"indexed\":true,\"internalType\":\"address\"},{\"name\":\"newOwner\",\"type\":\"address\",\"indexed\":true,\"internalType\":\"address\"}],\"anonymous\":false}]",
	Bin: "0x60a06040523480156200001157600080fd5b5060405162005f7038038062005f7083398101604081905262000034916200039e565b6001600160a01b0381166080526200004e61dead62000055565b50620003d0565b600054610100900460ff1615808015620000765750600054600160ff909116105b80620000a6575062000093306200019360201b620017471760201c565b158015620000a6575060005460ff166001145b6200010f5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084015b60405180910390fd5b6000805460ff19166001179055801562000133576000805461ff0019166101001790555b6200013d620001a2565b62000148826200020a565b80156200018f576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b5050565b6001600160a01b03163b151590565b600054610100900460ff16620001fe5760405162461bcd60e51b815260206004820152602b602482015260008051602062005f5083398151915260448201526a6e697469616c697a696e6760a81b606482015260840162000106565b6200020862000289565b565b62000214620002f0565b6001600160a01b0381166200027b5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840162000106565b62000286816200034c565b50565b600054610100900460ff16620002e55760405162461bcd60e51b815260206004820152602b602482015260008051602062005f5083398151915260448201526a6e697469616c697a696e6760a81b606482015260840162000106565b62000208336200034c565b6033546001600160a01b03163314620002085760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640162000106565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600060208284031215620003b157600080fd5b81516001600160a01b0381168114620003c957600080fd5b9392505050565b608051615b5d620003f3600039600081816103ff0152610ec60152615b5d6000f3fe608060405234801561001057600080fd5b50600436106101c45760003560e01c8063739e8484116100f9578063b22bed7e11610097578063cebf08d711610071578063cebf08d71461063b578063e0a655ff14610697578063e8b6d3fe146106f3578063f2fde38b1461074f57600080fd5b8063b22bed7e146105b9578063ba58e82a14610615578063c4d66de81461062857600080fd5b80639cc3eb48116100d35780639cc3eb48146104c0578063a8e4fb901461051c578063a903a2771461053c578063ae9511491461055d57600080fd5b8063739e8484146103fa5780638da5cb5b146104465780639adb2d681461046457600080fd5b80633893af6d116101665780636378aad5116101405780636378aad5146103175780636a73b00b146103735780636be1e68b14610396578063715018a6146103f257600080fd5b80633893af6d1461029e57806350697a3f146102c557806354fd4d50146102d857600080fd5b80631fb4a228116101a25780631fb4a2281461021e578063295840d9146102315780632c68fa02146102645780632d4bad8a1461027757600080fd5b806305f7aead146101c95780630ba24fe0146101f25780630dcaeaf214610207575b600080fd5b6101dc6101d7366004615181565b610762565b6040516101e99190615220565b60405180910390f35b6102056102003660046152e0565b610f92565b005b610210610e1081565b6040519081526020016101e9565b61020561022c3660046152e0565b610fe6565b61025461023f366004615316565b60666020526000908152604090205460ff1681565b60405190151581526020016101e9565b610205610272366004615378565b611035565b6102107f63ce814bd924c1ef12c43686e4cbf48ed1639a78387b0570c23ca921e8ce071c81565b6102107f501a3a7a4e0cf54b03f2488098bdd59bc1c2e8d741a300d6b25926d531733fef81565b6102056102d3366004615378565b611084565b604080518082018252600581527f302e302e31000000000000000000000000000000000000000000000000000000602082015290516101e99190615430565b60408051808201909152600581527f6e6f6e63650000000000000000000000000000000000000000000000000000006020909101526102107f7ab1577440dd7bedf920cb6de2f9fc6bf7ba98c78c85a3fa1f8311aac95e175981565b6102546103813660046152e0565b60676020526000908152604090205460ff1681565b60408051808201909152600681527f64696765737400000000000000000000000000000000000000000000000000006020909101526102107f682a7e258d80bd2421d3103cbe71e3e3b82138116756b97b8256f061dc2f11fb81565b6102056110e3565b6104217f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016101e9565b60335473ffffffffffffffffffffffffffffffffffffffff16610421565b60408051808201909152600981527f6d6f64756c655f696400000000000000000000000000000000000000000000006020909101526102107f8ce577cf664c36ba5130242bf5790c2675e9f4e6986a842b607821bee25372ee81565b60408051808201909152600881527f636162756e646c650000000000000000000000000000000000000000000000006020909101526102107f8a8cb7aa1da17ada103546ae6b4e13ccc2fafa17adf5f93925e0a0a4e5681a6a81565b6065546104219073ffffffffffffffffffffffffffffffffffffffff1681565b61054f61054a366004615443565b6110f7565b6040516101e9929190615478565b60408051808201909152600b81527f63657274696669636174650000000000000000000000000000000000000000006020909101526102107f925cec779426f44d8d555e01d2683a3a765ce2fa7562ca7352aeb09dfc57ea6a81565b60408051808201909152600481527f70637273000000000000000000000000000000000000000000000000000000006020909101526102107f61585f8bc67a4b6d5891a4639a074964ac66fc2241dc0b36c157dc101325367a81565b6102056106233660046154a6565b61123e565b6102056106363660046152e0565b6114f4565b60408051808201909152600981527f757365725f6461746100000000000000000000000000000000000000000000006020909101526102107f5e4ea5393e4327b3014bc32f2264336b0d1ee84a4cfd197c8ad7e1e16829a16a81565b60408051808201909152600981527f74696d657374616d7000000000000000000000000000000000000000000000006020909101526102107f4ebf727c48eac2c66272456b06a885c5cc03e54d140f63b63b6fd10c1227958e81565b60408051808201909152600a81527f7075626c69635f6b6579000000000000000000000000000000000000000000006020909101526102107fc7b28019ccfdbd30ffc65951d94bb85c9e2b8434111a000b5afd533ce65f57a481565b61020561075d3660046152e0565b611690565b6107bb60405180610120016040528060008152602001600067ffffffffffffffff168152602001600081526020016060815260200160008152602001606081526020016000815260200160008152602001600081525090565b60006107c684611763565b905060006107d78260000151611ffb565b11610843576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f6e6f206d6f64756c65206964000000000000000000000000000000000000000060448201526064015b60405180910390fd5b6000816020015167ffffffffffffffff16116108bb576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f6e6f2074696d657374616d700000000000000000000000000000000000000000604482015260640161083a565b60008160a00151511161092a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600b60248201527f6e6f20636162756e646c65000000000000000000000000000000000000000000604482015260640161083a565b7f501a3a7a4e0cf54b03f2488098bdd59bc1c2e8d741a300d6b25926d531733fef61096282604001518661203c90919063ffffffff16565b146109c9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f696e76616c696420646967657374000000000000000000000000000000000000604482015260640161083a565b8060600151516001111580156109e55750602081606001515111155b610a4b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f696e76616c696420706372730000000000000000000000000000000000000000604482015260640161083a565b60c081015160ff1660f61480610a875750610a698160c00151611ffb565b600111158015610a875750610400610a848260c00151611ffb565b11155b610aed576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600f60248201527f696e76616c696420707562206b65790000000000000000000000000000000000604482015260640161083a565b60e081015160ff1660f61480610b115750610200610b0e8260e00151611ffb565b11155b610b77576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f696e76616c696420757365722064617461000000000000000000000000000000604482015260640161083a565b61010081015160ff1660f61480610b9d5750610200610b9a826101000151611ffb565b11155b610c03576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600d60248201527f696e76616c6964206e6f6e636500000000000000000000000000000000000000604482015260640161083a565b60005b816060015151811015610cfa57610c3982606001518281518110610c2c57610c2c615512565b6020026020010151611ffb565b60201480610c5f5750610c5b82606001518281518110610c2c57610c2c615512565b6030145b80610c825750610c7e82606001518281518110610c2c57610c2c615512565b6040145b610ce8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600b60248201527f696e76616c696420706372000000000000000000000000000000000000000000604482015260640161083a565b80610cf281615570565b915050610c06565b506000610d1482608001518661206e90919063ffffffff16565b905060008260a001515167ffffffffffffffff811115610d3657610d3661503e565b604051908082528060200260200182016040528015610d6957816020015b6060815260200190600190039081610d545790505b50905060005b8360a0015151811015610e8557610d958460a001518281518110610c2c57610c2c615512565b600111158015610dbf5750610400610dbc8560a001518381518110610c2c57610c2c615512565b11155b610e25576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601560248201527f696e76616c696420636162756e646c6520636572740000000000000000000000604482015260640161083a565b610e558460a001518281518110610e3e57610e3e615512565b60200260200101518861206e90919063ffffffff16565b828281518110610e6757610e67615512565b60200260200101819052508080610e7d90615570565b915050610d6f565b506040517f5b608e2a00000000000000000000000000000000000000000000000000000000815260009073ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001690635b608e2a90610efd90869086906004016155a8565b6000604051808303816000875af1158015610f1c573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052610f629190810190615694565b90506000610f738860008a51612095565b9050610f84826080015182896121bc565b509293505050505b92915050565b610f9a61223a565b73ffffffffffffffffffffffffffffffffffffffff16600090815260676020526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00169055565b610fee61223a565b606580547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b61103d61223a565b600160666000848460405161105392919061574c565b6040518091039020815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b61108c61223a565b6066600083836040516110a092919061574c565b6040805191829003909120825260208201929092520160002080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001690555050565b6110eb61223a565b6110f560006122bb565b565b6060806000600190508360008151811061111357611113615512565b01602001517fff00000000000000000000000000000000000000000000000000000000000000167fd20000000000000000000000000000000000000000000000000000000000000003611164575060025b60006111708583612332565b9050600061117e8683612342565b9050600061118c8783612356565b9050600061119a8883612356565b90506000856111a88661236e565b6111b2919061575c565b905060006111bf8561236e565b6111c88561236e565b6111d2919061575c565b905060006111e18b8985612393565b905060006111f96111f18861236e565b8d9085612393565b90506112078285838661246e565b9a5061122e605086901c69ffffffffffffffffffff1661122687611ffb565b8e9190612393565b9950505050505050505050915091565b61124661223a565b60006112bb85858080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525050604080516020601f8901819004810282018101909252878152925087915086908190840183828082843760009201919091525061076292505050565b9050600061132082606001516000815181106112d9576112d9615512565b602002602001015187878080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929392505061203c9050565b60008181526066602052604090205490915060ff1661139b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601b60248201527f696e76616c6964207063723020696e206174746573746174696f6e0000000000604482015260640161083a565b42610e10836020015167ffffffffffffffff166113b89190615773565b1161141f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f6174746573746174696f6e20746f6f206f6c6400000000000000000000000000604482015260640161083a565b60c082015160009061149e9060501c69ffffffffffffffffffff16611445906001615773565b60016114548660c00151611ffb565b61145e919061575c565b89898080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092949392505061265f9050565b73ffffffffffffffffffffffffffffffffffffffff16600090815260676020526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016600117905550505050505050565b600054610100900460ff16158080156115145750600054600160ff909116105b8061152e5750303b15801561152e575060005460ff166001145b6115ba576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a6564000000000000000000000000000000000000606482015260840161083a565b600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001179055801561161857600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff166101001790555b611620612668565b61162982611690565b801561168c57600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b5050565b61169861223a565b73ffffffffffffffffffffffffffffffffffffffff811661173b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f6464726573730000000000000000000000000000000000000000000000000000606482015260840161083a565b611744816122bb565b50565b73ffffffffffffffffffffffffffffffffffffffff163b151590565b6117bc60405180610120016040528060008152602001600067ffffffffffffffff168152602001600081526020016060815260200160008152602001606081526020016000815260200160008152602001600081525090565b601260208301207f63ce814bd924c1ef12c43686e4cbf48ed1639a78387b0570c23ca921e8ce071c1461184b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601a60248201527f696e76616c6964206174746573746174696f6e20707265666978000000000000604482015260640161083a565b6000611858836012612332565b905060006118768469ffffffffffffffffffff605085901c16612707565b90506118d160405180610120016040528060008152602001600067ffffffffffffffff168152602001600081526020016060815260200160008152602001606081526020016000815260200160008152602001600081525090565b60006118dc8461236e565b90505b806118e98461236e565b1015611ff2576118f98684612717565b92506000611907878561203c565b60408051808201909152600981527f6d6f64756c655f6964000000000000000000000000000000000000000000000060209091015290507f731a883099b3c945aecfdbd40a86f3d98a160b1967957bd49f87de411dac8d1281016119795761196f8785612717565b8084529350611fec565b60408051808201909152600681527f64696765737400000000000000000000000000000000000000000000000000006020909101527f97d581da727f42dbde2cefc3418e1c1c47dec7ee98a946847da90f9e23d0ee0581016119ed576119df8785612717565b604084018190529350611fec565b60408051808201909152600b81527f63657274696669636174650000000000000000000000000000000000000000006020909101527f6da313886bd90bb272aaa1fe2d97c5c589a31d058a9d358cad514f6203a815968101611a6157611a538785612356565b608084018190529350611fec565b60408051808201909152600a81527f7075626c69635f6b6579000000000000000000000000000000000000000000006020909101527f384d7fe6330242cf0039a6ae26b447a361d47bcbeee5fff4a502acc319a0a85c8101611ad557611ac7878561272f565b60c084018190529350611fec565b60408051808201909152600981527f757365725f6461746100000000000000000000000000000000000000000000006020909101527fa1b15ac6c1bcd84cfeb43cd0dd9bcc94f2e117b5b302e68375281e1e97d65e968101611b4957611b3b878561272f565b60e084018190529350611fec565b60408051808201909152600581527f6e6f6e63650000000000000000000000000000000000000000000000000000006020909101527f854ea88bbf22841206df34921d06039408456738737a5c05e07cee5536a1e8a78101611bbe57611baf878561272f565b61010084018190529350611fec565b60408051808201909152600981527f74696d657374616d7000000000000000000000000000000000000000000000006020909101527fb1408d83b7153d399d8dba94f9577a3a33fc1ab2ebf09c49c4902ef3edd86a728101611c4457611c248785612747565b9350611c308460a01c90565b67ffffffffffffffff166020840152611fec565b60408051808201909152600881527f636162756e646c650000000000000000000000000000000000000000000000006020909101527f75734855e25e8525efcab95194b1ec333d0505e8520a06c6da1f5f5b1a97e5968101611d5d57611caa878561275f565b9350611cb68460a01c90565b67ffffffffffffffff1667ffffffffffffffff811115611cd857611cd861503e565b604051908082528060200260200182016040528015611d01578160200160208202803683370190505b5060a084015260005b8360a0015151811015611d5757611d218886612356565b9450848460a001518281518110611d3a57611d3a615512565b602090810291909101015280611d4f81615570565b915050611d0a565b50611fec565b60408051808201909152600481527f70637273000000000000000000000000000000000000000000000000000000006020909101527f9ea7a0743985b492a76e5b9c65f8b69b539903ddbe23f4c93ea823efecdac9868101611f8a57611dc38785612342565b9350611dcf8460a01c90565b67ffffffffffffffff1667ffffffffffffffff811115611df157611df161503e565b604051908082528060200260200182016040528015611e1a578160200160208202803683370190505b50606084015260005b836060015151811015611d5757611e3a8886612747565b94506000611e488660a01c90565b67ffffffffffffffff1690508460600151518110611ec2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601560248201527f696e76616c696420706372206b65792076616c75650000000000000000000000604482015260640161083a565b84606001518181518110611ed857611ed8615512565b6020026020010151600014611f49576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f6475706c696361746520706372206b6579000000000000000000000000000000604482015260640161083a565b611f538987612356565b95508585606001518281518110611f6c57611f6c615512565b60209081029190910101525080611f8281615570565b915050611e23565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601760248201527f696e76616c6964206174746573746174696f6e206b6579000000000000000000604482015260640161083a565b506118df565b50949350505050565b600081604060ff8216148061201357508060ff166060145b15612033576120228360a01c90565b67ffffffffffffffff169392505050565b50600092915050565b6000612067605083901c69ffffffffffffffffffff1661205b84611ffb565b85919091016020012090565b9392505050565b6060612067605083901c69ffffffffffffffffffff1661208d84611ffb565b859190612393565b604080516101008101825267cbbb9d5dc1059ed8815267629a292a367cd5076020820152679159015a3070dd179181019190915267152fecd8f70e59396060828101919091526767332667ffc00b316080830152678eb44a876858151160a083015267db0c2e0d64f98fa760c08301526747b5481dbefa4fa460e08301529061212085858584612777565b80516020808301516040808501516060860151608087015160a088015184517fffffffffffffffff00000000000000000000000000000000000000000000000060c0998a1b81169882019890985295881b8716602887015292871b8616603086015290861b85166038850152851b84169183019190915290921b1660488201526050016040516020818303038152906040529150509392505050565b6121cf6121c7612fe5565b838386613100565b612235576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600b60248201527f696e76616c696420736967000000000000000000000000000000000000000000604482015260640161083a565b505050565b60335473ffffffffffffffffffffffffffffffffffffffff1633146110f5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161083a565b6033805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60006120678383604060016133b1565b6000612067836123518461236e565b612707565b6000612067836123658461236e565b604060016133b1565b600061237982611ffb565b610f8c9069ffffffffffffffffffff605085901c16615773565b82516060906123a28385615773565b111561240a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f696e646578206f7574206f6620626f756e647300000000000000000000000000604482015260640161083a565b8167ffffffffffffffff8111156124235761242361503e565b6040519080825280601f01601f19166020018201604052801561244d576020820181803683370190505b50905060208082019085850101612465828286613683565b50509392505050565b60608161247c85600d615773565b6124869190615773565b67ffffffffffffffff81111561249e5761249e61503e565b6040519080825280601f01601f1916602001820160405280156124c8576020820181803683370190505b509050608460f81b816000815181106124e3576124e3615512565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350606a60f81b8160018151811061252a5761252a615512565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053507f40000000000000000000000000000000000000000000000000000000000000008161258686600c615773565b8151811061259657612596615512565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535060408051808201909152600a81527f5369676e617475726531000000000000000000000000000000000000000000006020808301918252838101919088810190870161261d612615856002615773565b84600a613683565b61263261262b85600c615773565b838b613683565b6126528961264186600d615773565b61264b9190615773565b8289613683565b5050505050949350505050565b91016020012090565b600054610100900460ff166126ff576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201527f6e697469616c697a696e67000000000000000000000000000000000000000000606482015260840161083a565b6110f56136f8565b6000612067838360a060016133b1565b6000612067836127268461236e565b606060016133b1565b60006120678361273e8461236e565b604060006133b1565b6000612067836127568461236e565b600060016133b1565b60006120678361276e8461236e565b608060016133b1565b60408051610a008101825267428a2f98d728ae228152677137449123ef65cd602082015267b5c0fbcfec4d3b2f9181019190915267e9b5dba58189dbbc6060820152673956c25bf348b53860808201526759f111f1b605d01960a082015267923f82a4af194f9b60c082015267ab1c5ed5da6d811860e082015267d807aa98a30302426101008201526712835b0145706fbe61012082015267243185be4ee4b28c61014082015267550c7dc3d5ffb4e26101608201526772be5d74f27b896f6101808201526780deb1fe3b1696b16101a0820152679bdc06a725c712356101c082015267c19bf174cf6926946101e082015267e49b69c19ef14ad261020082015267efbe4786384f25e3610220820152670fc19dc68b8cd5b561024082015267240ca1cc77ac9c65610260820152672de92c6f592b0275610280820152674a7484aa6ea6e4836102a0820152675cb0a9dcbd41fbd46102c08201526776f988da831153b56102e082015267983e5152ee66dfab61030082015267a831c66d2db4321061032082015267b00327c898fb213f61034082015267bf597fc7beef0ee461036082015267c6e00bf33da88fc261038082015267d5a79147930aa7256103a08201526706ca6351e003826f6103c082015267142929670a0e6e706103e08201526727b70a8546d22ffc610400820152672e1b21385c26c926610420820152674d2c6dfc5ac42aed6104408201526753380d139d95b3df61046082015267650a73548baf63de61048082015267766a0abb3c77b2a86104a08201526781c2c92e47edaee66104c08201526792722c851482353b6104e082015267a2bfe8a14cf1036461050082015267a81a664bbc42300161052082015267c24b8b70d0f8979161054082015267c76c51a30654be3061056082015267d192e819d6ef521861058082015267d69906245565a9106105a082015267f40e35855771202a6105c082015267106aa07032bbd1b86105e08201526719a4c116b8d2d0c8610600820152671e376c085141ab53610620820152672748774cdf8eeb996106408201526734b0bcb5e19b48a861066082015267391c0cb3c5c95a63610680820152674ed8aa4ae3418acb6106a0820152675b9cca4f7763e3736106c082015267682e6ff3d6b2b8a36106e082015267748f82ee5defb2fc6107008201526778a5636f43172f606107208201526784c87814a1f0ab72610740820152678cc702081a6439ec6107608201526790befffa23631e2861078082015267a4506cebde82bde96107a082015267bef9a3f7b2c679156107c082015267c67178f2e372532b6107e082015267ca273eceea26619c61080082015267d186b8c721c0c20761082082015267eada7dd6cde0eb1e61084082015267f57d4f7fee6ed1786108608201526706f067aa72176fba610880820152670a637dc5a2c898a66108a082015267113f9804bef90dae6108c0820152671b710b35131c471b6108e08201526728db77f523047d846109008201526732caab7b40c72493610920820152673c9ebe0a15c9bebc61094082015267431d67c49c100d4c610960820152674cc5d4becb3e42b661098082015267597f299cfc657e2a6109a0820152675fcb6fab3ad6faec6109c0820152676c44198c4a4758176109e08201526000612c36868686613798565b905060808151612c4691906157ba565b15612cad576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600d60248201527f50414444494e475f4552524f5200000000000000000000000000000000000000604482015260640161083a565b612cb5614f95565b612cbd614fb4565b612cc5614fd3565b6000612cd26080896157ce565b612cdd9060806157e2565b905060005b85518201811015612fd85781811015612d0757612d028b84838d016138a7565b612d14565b612d1486848484036138a7565b60005b6010811015612d6557838160108110612d3257612d32615512565b6020020151868260508110612d4957612d49615512565b67ffffffffffffffff9092166020929092020152600101612d17565b5060105b6050811015612e1b57856010820360508110612d8757612d87615512565b6020020151612dae87600f840360508110612da457612da4615512565b602002015161390e565b876007840360508110612dc357612dc3615512565b6020020151612dea896002860360508110612de057612de0615512565b602002015161393d565b010101868260508110612dff57612dff615512565b67ffffffffffffffff9092166020929092020152600101612d69565b5060005b6008811015612e6d57888160088110612e3a57612e3a615512565b6020020151858260088110612e5157612e51615512565b67ffffffffffffffff9092166020929092020152600101612e1f565b5060005b6050811015612f7b576000868260508110612e8e57612e8e615512565b6020020151898360508110612ea557612ea5615512565b6020020151608088015160a089015160c08a01518219169116186080890151612ecd90613964565b89600760200201510101010190506000612f06878260200201518860016020020151896002602002015180821690831691909216181890565b8751612f1190613987565b60c08901805167ffffffffffffffff90811660e08c015260a08b018051821690925260808b018051821690925260608b0180518701821690925260408b018051821690925260208b01805182169092528a5181169091529101909201909116865250600101612e71565b5060005b6008811015612fcf57848160088110612f9a57612f9a615512565b6020020151898260088110612fb157612fb1615512565b6020020180519190910167ffffffffffffffff169052600101612f7f565b50608001612ce2565b5050505050505050505050565b6130256040518060e00160405280606081526020016060815260200160608152602001606081526020016060815260200160608152602001606081525090565b604080516101408101909152603060e082018181528291615ac16101008401398152602001604051806060016040528060308152602001615a01603091398152602001604051806060016040528060308152602001615a91603091398152602001604051806060016040528060308152602001615a31603091398152602001604051806060016040528060308152602001615b21603091398152602001604051806060016040528060308152602001615af1603091398152602001604051806060016040528060308152602001615a61603091399052919050565b600061312d6040518060800160405280600081526020016000815260200160008152602001600081525090565b613136846139aa565b60208301528152613146836139aa565b6060830152604080830191909152805160e08101909152865160009190819061316e90613a5d565b81526020016131808960200151613a5d565b81526020016131928960400151613a5d565b81526020016131a48960600151613a5d565b81526020016131b68960800151613a5d565b81526020016131c88960a00151613a5d565b81526020016131da8960c00151613a5d565b815250905060006131ee8260800151613af3565b835160208101519051919250159015168061321b5750600061321884600001518460a00151613b69565b12155b80613239575061323983602001516000602082015191511591141690565b806132555750600061325384602001518460c00151613b69565b135b1561326657600093505050506133a9565b6132888183608001518460000151856020015187604001518860600151613c0f565b61329857600093505050506133a9565b865160308110156132dc5760408051603080825260608201909252600091602082018180368337509192506132d991505060208a0183830360500184613cf3565b97505b5060006132fb826132ec8a613a5d565b86602001518660a00151613d01565b9050600061331783866000015187602001518760a00151613d01565b905060006133256003613e12565b905060006133518587608001518489600001518a604001518b606001518d604001518e60600151613e34565b905061336a85876080015184896000015185898961421b565b9050809450819550505050506133a16133898484848860800151613d01565b86516020808201519083015191519251911491141690565b955050505050505b949350505050565b6000808585815181106133c6576133c6615512565b602001015160f81c60f81b60e060f81b1660f81c905060008686815181106133f0576133f0615512565b60209101015160f81c601f16905060ff821660e0036134a45783158061341a57508060ff16601614155b613480576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f6e756c6c2076616c756520666f7220726571756972656420656c656d656e7400604482015260640161083a565b61349b60ff83831716613494886001615773565b60501b1790565b925050506133a9565b8460ff168260ff1614613513576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600f60248201527f756e657870656374656420747970650000000000000000000000000000000000604482015260640161083a565b8060ff166018036135655761349b60ff8316613530886002615773565b8961353c8a6001615773565b8151811061354c5761354c615512565b016020015160f81c60a01b60509190911b919091171790565b8060ff166019036135ac5761349b60ff8316613582886003615773565b6135976135908a6001615773565b8b906143a5565b61ffff1660a01b60509190911b919091171790565b8060ff16601a036135f55761349b60ff83166135c9886005615773565b6135de6135d78a6001615773565b8b90614428565b63ffffffff1660a01b60509190911b919091171790565b8060ff16601b036136425761349b60ff8316613612886009615773565b6136276136208a6001615773565b8b906144ab565b67ffffffffffffffff1660a01b60509190911b919091171790565b61367860ff8316613654886001615773565b60501b1774ff000000000000000000000000000000000000000060a084901b161790565b979650505050505050565b602081106136bb578151835261369a602084615773565b92506136a7602083615773565b91506136b460208261575c565b9050613683565b801561223557600060016136d083602061575c565b6136dc9061010061593f565b6136e6919061575c565b83518551821691191617845250505050565b600054610100900460ff1661378f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201527f6e697469616c697a696e67000000000000000000000000000000000000000000606482015260840161083a565b6110f5336122bb565b606060006137a78360086157e2565b60c01b905060006137b96080856157ba565b9050600060708210156137d8576137d182607761575c565b90506137e6565b6137e38260f761575c565b90505b60008167ffffffffffffffff8111156138015761380161503e565b6040519080825280601f01601f19166020018201604052801561382b576020820181803683370190505b50905060006138508461383e898b615773565b613848919061575c565b8a9086612393565b60405190915061388a9082907f8000000000000000000000000000000000000000000000000000000000000000908590899060200161594b565b604051602081830303815290604052955050505050509392505050565b60005b6010811015613908576138d26138c18260086157e2565b6138cb9084615773565b85906144ab565b8382601081106138e4576138e4615512565b67ffffffffffffffff909216602092909202015261390181615570565b90506138aa565b50505050565b600060078267ffffffffffffffff16901c61392a83600861452e565b61393584600161452e565b181892915050565b600060068267ffffffffffffffff16901c61395983603d61452e565b61393584601361452e565b600061397182602961452e565b61397c83601261452e565b61393584600e61452e565b600061399482602761452e565b61399f83602261452e565b61393584601c61452e565b6000808251606014613a18576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600d60248201527f553338343a206e6f742037363800000000000000000000000000000000000000604482015260640161083a565b60408051608081018252925082019050600082526020830151601083015260308301516020830152600081526050830151601082015260608301516020820152915091565b60008151603014613aca576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600d60248201527f553338343a206e6f742033383400000000000000000000000000000000000000604482015260640161083a565b604080518082019091529050600081526020820151601082015260308201516020820152919050565b6000613b0761036060408051918201905290565b6060610120820152602061014082018190526040610160830181905260016101e0840152845161020084015284820180516102208501526102408401829052610260840192909252610280830152925161030082015291516103208301525090565b815181516000919080821115613b8457600192505050610f8c565b80821015613bb6577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff92505050610f8c565b50506020838101519083015180821115613bd557600192505050610f8c565b80821015613c07577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff92505050610f8c565b505092915050565b602082015182516000911590151680613c3657506020868101519084015187518551149114165b80613c48575060208201518251159015165b80613c6157506020868101519083015187518451149114165b15613c6e57506000613ce9565b6000613c7c8884600261456b565b90506000613c8c8986600361456b565b6020880151885191925015901516613cb657613cb381613cad8b888b6145b0565b8a6146a2565b90505b6020860151865115901516613cd357613cd081878a6146a2565b90505b6020818101519083015191519251911491141690505b9695505050505050565b8082828560045afa50505050565b6000613d0e858484614706565b9050613dd38482876060018251602093840151835193850151608081811c6fffffffffffffffffffffffffffffffff80851682810294821695841c86810287830280871c820188810180891b9287169290920160408d01528c8402878c02958e0297909402998b02988210921191909101861b90861c018601878101858101958610981196119590950195909501831b82841c01850184810180851b939092169290920198870198909852959093029086109190941001811b93901c92909201019052565b60608552602085602001526040856040015260018560c0015281518560e0015260208201518561010001526040816101208760055afa50949350505050565b6000613e246040808051918201905290565b6000815260208101929092525090565b613e3c614ff2565b613e4585614794565b613e4e85614794565b613e586001613e12565b608084018051604081019290925260208281019390935292905290518051910151613e98918b918b918b918b91908760045b6020020151604001516147bb565b61010084018051604080820193909352602081810194909452939093526080840151805181840151919092015193518051930151613ef0948e948e948e948e949193909290918a60085b602002015160400151614978565b6101808401516040810191909152602081019190915252613f1083614794565b613f1983614794565b613f236001613e12565b60208085018051604081019390935282820193909352929052518051910151613f57918b918b918b918b9190876001613e8a565b6040808501519081019190915260208181019290925291909152808201518051910151613faf918b918b918b918b91908760015b60209081029190910151604090810151908a015180519201519091908a6002613ee2565b606084015160408101919091526020818101929092529190915260808201518051910151614006918b918b918b918b91908760045b60209081029190910151604001518982015180519201519091908a6001613ee2565b60a08401516040810191909152602081810192909252919091526080820151805191015161403f918b918b918b918b9190876004613f8b565b60c084015160408101919091526020818101929092529190915260808201518051910151614097918b918b918b918b91908760045b602090810291909101516040015160608a015180519201519091908a6003613ee2565b60e084015160408101919091526020818101929092529190915261010082015180519101516140d1918b918b918b918b9190876008613fe4565b610120840151604081019190915260208181019290925291909152610100820151805191015161410c918b918b918b918b9190876008613f8b565b6101408401516040810191909152602081810192909252919091526101008201518051910151614147918b918b918b918b9190876008614074565b6101608401516040810191909152602081810192909252919091526101808201518051910151614182918b918b918b918b919087600c613fe4565b6101a084015160408101919091526020818101929092529190915261018082015180519101516141bd918b918b918b918b919087600c613f8b565b6101c084015160408101919091526020818101929092529190915261018082015180519101516141f8918b918b918b918b919087600c614074565b6101e0840151604081019190915260208101919091525298975050505050505050565b8151815160009182918291829161423183613e12565b955061423d6000613e12565b94506142496001613e12565b935060025b60b881116142f4576142658e8e8e8e8b8b8b6147bb565b9198509650945061427b8e8e8e8e8b8b8b6147bb565b9198509650945060b881900382811c6003169084901c60021b600c1617935083156142ec5760008a85601081106142b4576142b4615512565b602002015190506142e38f8f8f8f8560005b6020020151866001602002015187600260200201518f8f8f614978565b91995097509550505b60020161424e565b5050506020868101519086015160025b61010081116143935761431c8e8e8e8e8b8b8b6147bb565b919850965094506143328e8e8e8e8b8b8b6147bb565b9198509650945061010081900382811c6003169084901c60021b600c16179350831561438b5760008a856010811061436c5761436c615512565b602002015190506143828f8f8f8f8560006142c6565b91995097509550505b600201614304565b505050505b9750975097945050505050565b60006143b2826002615773565b8351101561441c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f696e646578206f7574206f6620626f756e647300000000000000000000000000604482015260640161083a565b50016020015160f01c90565b6000614435826004615773565b8351101561449f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f696e646578206f7574206f6620626f756e647300000000000000000000000000604482015260640161083a565b50016020015160e01c90565b60006144b8826008615773565b83511015614522576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f696e646578206f7574206f6620626f756e647300000000000000000000000000604482015260640161083a565b50016020015160c01c90565b600067ffffffffffffffff8381169083161c61454b8360406159d7565b67ffffffffffffffff168467ffffffffffffffff16901b17905092915050565b600061457d6040808051918201905290565b9050610240840193508251846060015260208301518460800152818460a001526040816101008660055afa509392505050565b60006145c26040808051918201905290565b9050614688838361018087018251602093840151835193850151608081811c6fffffffffffffffffffffffffffffffff80851682810294821695841c86810287830280871c820188810180891b9287169290920160408d01528c8402878c02958e0297909402998b02988210921191909101861b90861c018601878101858101958610981196119590950195909501831b82841c01850184810180851b939092169290920198870198909852959093029086109190941001811b93901c92909201019052565b610120840193506040816101208660055afa509392505050565b60006146b46040808051918201905290565b60208581015185820151810191830182905285518751019110018152905060006146de8284613b69565b1261206757602080820180519184015182039081905283518351929091119103038152612067565b60006147186040808051918201905290565b905061474c826147286002613e12565b60208281015190820151810360c089018190529151925191119190030360a0860152565b604084526040846020015260408460400152825184606001526020830151846080015281518460e0015260208201518461010001526040816101208660055afa509392505050565b60006147a66040808051918201905290565b90508151815260208201516020820152919050565b60008060006147d4866000602082015191511591141690565b80156147e7575060208501518551159015165b15614815576147f66000613e12565b6148006000613e12565b61480a6001613e12565b925092509250614398565b60006148228b87876145b0565b905061482e818b614ad1565b6148398b82896145b0565b93506148468b8588614b1b565b614850848b614ad1565b61485c8b88600261456b565b96506148698b888b6145b0565b92506148778b86600261456b565b94506148848b868a614b1b565b61488f83868c614bf7565b61489b8b84600261456b565b91506148a887858c614c4d565b60006148b48b89614c6c565b90506148c183828d614bf7565b6020808c015181850151810391830182905284518d519290911091030381526148ec8886838e614ca4565b6148f78c8986614b1b565b6149028c88846145b0565b96506149108c886002614cf4565b61491a878c614ad1565b6020808c015181890151810391830182905288518d519290911091030381526149458489838e614ca4565b6149518c868486614d23565b61495e8c84846002614e00565b6149698c8484614b1b565b50509750975097945050505050565b6000806000614991896000602082015191511591141690565b80156149a4575060208801518851159015165b156149cf576149b286614794565b6149bb86614794565b6149c486614794565b925092509250614ac1565b602086015186511590151680156149ed575060208501518551159015165b15614a0d576149fb89614794565b614a0489614794565b6149c489614794565b614a188d89866145b0565b9250614a258d86896145b0565b9150614a328d8a866145b0565b9050614a3f8d87896145b0565b6020808201519083015182518451939850911491141615614a9e5760208281015190840151835185511491141615614a80576149c48d8d8d8d8d8d8d6147bb565b614a8a6000613e12565b614a946000613e12565b6149c46001613e12565b614aa98d88866145b0565b9950614aba8d8b838f898789614e30565b9250925092505b9a509a509a975050505050505050565b6020820180518351600190811b60ff83901c1785521b90526000614af58383613b69565b1261168c5760208281018051918301518203908190529151835191909211919003039052565b614bdf828261018086018251602093840151835193850151608081811c6fffffffffffffffffffffffffffffffff80851682810294821695841c86810287830280871c820188810180891b9287169290920160408d01528c8402878c02958e0297909402998b02988210921191909101861b90861c018601878101858101958610981196119590950195909501831b82841c01850184810180851b939092169290920198870198909852959093029086109190941001811b93901c92909201019052565b610120830192506040826101208560055afa50505050565b614c198383602082810180519183015182019081905291518351019110019052565b6000614c258483613b69565b1261223557602080840180519183015182039081905282518551929091119103038352505050565b6020808301518351600190811b60ff83901c1786521b90840152614c19565b6000614c7e6040808051918201905290565b602080850151818501518103918301829052845186519290911091030381529050610f8c565b602083810151838201518101918601829052835185510191100184526000614ccc8583613b69565b1261390857602080850180519183015182039081905282518651929091119103038452613908565b610240830192508151836060015260208201518360800152808360a001526040826101008560055afa50505050565b614de7828261018087018251602093840151835193850151608081811c6fffffffffffffffffffffffffffffffff80851682810294821695841c86810287830280871c820188810180891b9287169290920160408d01528c8402878c02958e0297909402998b02988210921191909101861b90861c018601878101858101958610981196119590950195909501831b82841c01850184810180851b939092169290920198870198909852959093029086109190941001811b93901c92909201019052565b610120840193506040836101208660055afa5050505050565b610240840193508151846060015260208201518460800152808460a001526040836101008660055afa5050505050565b600080600080614e408887614c6c565b9050614e4d85828a6146a2565b6020808a0151818a0151810391840182905289518b519290911091030382529250614e7989828a6146a2565b93506000614e898c86600261456b565b9050614e978c85600261456b565b9250614ea48c848d614b1b565b614eaf888b8b6146a2565b9750614ebc8c8983614b1b565b6020808a0151818a0151810391840182905289518b51929091109103038252614ee683838b614bf7565b6000614ef38d83886145b0565b9050614f008d8786614b1b565b614f0b8d8c846145b0565b6020808c015181870151810391860182905286518d519290911091030384529a50614f378b848c614bf7565b614f428d868d614b1b565b614f4d8d88836145b0565b6020808c015181830151810391860182905282518d519290911091030384529650614f7985848c614bf7565b614f858d85838f614d23565b5050509750975097945050505050565b60405180610a0001604052806050906020820280368337509192915050565b6040518061010001604052806008906020820280368337509192915050565b6040518061020001604052806010906020820280368337509192915050565b6040518061020001604052806010905b61500a615020565b8152602001906001900390816150025790505090565b60405180606001604052806003906020820280368337509192915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60405160a0810167ffffffffffffffff811182821017156150905761509061503e565b60405290565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff811182821017156150dd576150dd61503e565b604052919050565b600067ffffffffffffffff8211156150ff576150ff61503e565b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b600082601f83011261513c57600080fd5b813561514f61514a826150e5565b615096565b81815284602083860101111561516457600080fd5b816020850160208301376000918101602001919091529392505050565b6000806040838503121561519457600080fd5b823567ffffffffffffffff808211156151ac57600080fd5b6151b88683870161512b565b935060208501359150808211156151ce57600080fd5b506151db8582860161512b565b9150509250929050565b600081518084526020808501945080840160005b83811015615215578151875295820195908201906001016151f9565b509495945050505050565b602081528151602082015260006020830151615248604084018267ffffffffffffffff169052565b5060408301516060830152606083015161012080608085015261526f6101408501836151e5565b9150608085015160a085015260a08501517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08584030160c08601526152b483826151e5565b60c087015160e08781019190915287015161010080880191909152909601519190940152509192915050565b6000602082840312156152f257600080fd5b813573ffffffffffffffffffffffffffffffffffffffff8116811461206757600080fd5b60006020828403121561532857600080fd5b5035919050565b60008083601f84011261534157600080fd5b50813567ffffffffffffffff81111561535957600080fd5b60208301915083602082850101111561537157600080fd5b9250929050565b6000806020838503121561538b57600080fd5b823567ffffffffffffffff8111156153a257600080fd5b6153ae8582860161532f565b90969095509350505050565b60005b838110156153d55781810151838201526020016153bd565b838111156139085750506000910152565b600081518084526153fe8160208601602086016153ba565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b60208152600061206760208301846153e6565b60006020828403121561545557600080fd5b813567ffffffffffffffff81111561546c57600080fd5b6133a98482850161512b565b60408152600061548b60408301856153e6565b828103602084015261549d81856153e6565b95945050505050565b600080600080604085870312156154bc57600080fd5b843567ffffffffffffffff808211156154d457600080fd5b6154e08883890161532f565b909650945060208701359150808211156154f957600080fd5b506155068782880161532f565b95989497509550505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036155a1576155a1615541565b5060010190565b6040815260006155bb60408301856153e6565b6020838203818501528185518084528284019150828160051b85010183880160005b83811015615629577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08784030185526156178383516153e6565b948601949250908501906001016155dd565b50909998505050505050505050565b8051600781900b811461564a57600080fd5b919050565b600082601f83011261566057600080fd5b815161566e61514a826150e5565b81815284602083860101111561568357600080fd5b6133a98260208301602087016153ba565b6000602082840312156156a657600080fd5b815167ffffffffffffffff808211156156be57600080fd5b9083019060a082860312156156d257600080fd5b6156da61506d565b825180151581146156ea57600080fd5b8152602083015182811681146156ff57600080fd5b602082015261571060408401615638565b60408201526060830151606082015260808301518281111561573157600080fd5b61573d8782860161564f565b60808301525095945050505050565b8183823760009101908152919050565b60008282101561576e5761576e615541565b500390565b6000821982111561578657615786615541565b500190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000826157c9576157c961578b565b500690565b6000826157dd576157dd61578b565b500490565b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561581a5761581a615541565b500290565b600181815b8085111561587857817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482111561585e5761585e615541565b8085161561586b57918102915b93841c9390800290615824565b509250929050565b60008261588f57506001610f8c565b8161589c57506000610f8c565b81600181146158b257600281146158bc576158d8565b6001915050610f8c565b60ff8411156158cd576158cd615541565b50506001821b610f8c565b5060208310610133831016604e8410600b84101617156158fb575081810a610f8c565b615905838361581f565b807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482111561593757615937615541565b029392505050565b60006120678383615880565b6000855161595d818460208a016153ba565b7fff00000000000000000000000000000000000000000000000000000000000000861690830190815284516159998160018401602089016153ba565b8082019150507fffffffffffffffff000000000000000000000000000000000000000000000000841660018201526009810191505095945050505050565b600067ffffffffffffffff838116908316818110156159f8576159f8615541565b03939250505056feb3312fa7e23ee7e4988e056be3f82d19181d9c6efe8141120314088f5013875ac656398d8a2ed19d2a85c8edd3ec2aef3617de4a96262c6f5d9e98bf9292dc29f8f41dbd289a147ce9da3113b5f0b8c00a60b1ce1d7e819d7a431d7c90ea0e5fffffffffffffffffffffffffffffffffffffffffffffffffc7634d81f4372ddf581a0db248b0a77aecec196accc52972aa87ca22be8b05378eb1c71ef320ad746e1d3b628ba79b9859f741e082542a385502f25dbf55296c3a545e3872760ab7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffeffffffff0000000000000000fffffffcffffffffffffffffffffffffffffffffffffffffffffffffc7634d81f4372ddf581a0db248b0a77aecec196accc52973fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffeffffffff0000000000000000ffffffffa164736f6c634300080f000a496e697469616c697a61626c653a20636f6e7472616374206973206e6f742069",
}

// SystemConfigGlobalABI is the input ABI used to generate the binding from.
// Deprecated: Use SystemConfigGlobalMetaData.ABI instead.
var SystemConfigGlobalABI = SystemConfigGlobalMetaData.ABI

// SystemConfigGlobalBin is the compiled bytecode used for deploying new contracts.
// Deprecated: Use SystemConfigGlobalMetaData.Bin instead.
var SystemConfigGlobalBin = SystemConfigGlobalMetaData.Bin

// DeploySystemConfigGlobal deploys a new Ethereum contract, binding an instance of SystemConfigGlobal to it.
func DeploySystemConfigGlobal(auth *bind.TransactOpts, backend bind.ContractBackend, certManager common.Address) (common.Address, *types.Transaction, *SystemConfigGlobal, error) {
	parsed, err := SystemConfigGlobalMetaData.GetAbi()
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	if parsed == nil {
		return common.Address{}, nil, nil, errors.New("GetABI returned nil")
	}

	address, tx, contract, err := bind.DeployContract(auth, *parsed, common.FromHex(SystemConfigGlobalBin), backend, certManager)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &SystemConfigGlobal{SystemConfigGlobalCaller: SystemConfigGlobalCaller{contract: contract}, SystemConfigGlobalTransactor: SystemConfigGlobalTransactor{contract: contract}, SystemConfigGlobalFilterer: SystemConfigGlobalFilterer{contract: contract}}, nil
}

// SystemConfigGlobal is an auto generated Go binding around an Ethereum contract.
type SystemConfigGlobal struct {
	SystemConfigGlobalCaller     // Read-only binding to the contract
	SystemConfigGlobalTransactor // Write-only binding to the contract
	SystemConfigGlobalFilterer   // Log filterer for contract events
}

// SystemConfigGlobalCaller is an auto generated read-only Go binding around an Ethereum contract.
type SystemConfigGlobalCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// SystemConfigGlobalTransactor is an auto generated write-only Go binding around an Ethereum contract.
type SystemConfigGlobalTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// SystemConfigGlobalFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type SystemConfigGlobalFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// SystemConfigGlobalSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type SystemConfigGlobalSession struct {
	Contract     *SystemConfigGlobal // Generic contract binding to set the session for
	CallOpts     bind.CallOpts       // Call options to use throughout this session
	TransactOpts bind.TransactOpts   // Transaction auth options to use throughout this session
}

// SystemConfigGlobalCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type SystemConfigGlobalCallerSession struct {
	Contract *SystemConfigGlobalCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts             // Call options to use throughout this session
}

// SystemConfigGlobalTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type SystemConfigGlobalTransactorSession struct {
	Contract     *SystemConfigGlobalTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts             // Transaction auth options to use throughout this session
}

// SystemConfigGlobalRaw is an auto generated low-level Go binding around an Ethereum contract.
type SystemConfigGlobalRaw struct {
	Contract *SystemConfigGlobal // Generic contract binding to access the raw methods on
}

// SystemConfigGlobalCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type SystemConfigGlobalCallerRaw struct {
	Contract *SystemConfigGlobalCaller // Generic read-only contract binding to access the raw methods on
}

// SystemConfigGlobalTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type SystemConfigGlobalTransactorRaw struct {
	Contract *SystemConfigGlobalTransactor // Generic write-only contract binding to access the raw methods on
}

// NewSystemConfigGlobal creates a new instance of SystemConfigGlobal, bound to a specific deployed contract.
func NewSystemConfigGlobal(address common.Address, backend bind.ContractBackend) (*SystemConfigGlobal, error) {
	contract, err := bindSystemConfigGlobal(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &SystemConfigGlobal{SystemConfigGlobalCaller: SystemConfigGlobalCaller{contract: contract}, SystemConfigGlobalTransactor: SystemConfigGlobalTransactor{contract: contract}, SystemConfigGlobalFilterer: SystemConfigGlobalFilterer{contract: contract}}, nil
}

// NewSystemConfigGlobalCaller creates a new read-only instance of SystemConfigGlobal, bound to a specific deployed contract.
func NewSystemConfigGlobalCaller(address common.Address, caller bind.ContractCaller) (*SystemConfigGlobalCaller, error) {
	contract, err := bindSystemConfigGlobal(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &SystemConfigGlobalCaller{contract: contract}, nil
}

// NewSystemConfigGlobalTransactor creates a new write-only instance of SystemConfigGlobal, bound to a specific deployed contract.
func NewSystemConfigGlobalTransactor(address common.Address, transactor bind.ContractTransactor) (*SystemConfigGlobalTransactor, error) {
	contract, err := bindSystemConfigGlobal(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &SystemConfigGlobalTransactor{contract: contract}, nil
}

// NewSystemConfigGlobalFilterer creates a new log filterer instance of SystemConfigGlobal, bound to a specific deployed contract.
func NewSystemConfigGlobalFilterer(address common.Address, filterer bind.ContractFilterer) (*SystemConfigGlobalFilterer, error) {
	contract, err := bindSystemConfigGlobal(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &SystemConfigGlobalFilterer{contract: contract}, nil
}

// bindSystemConfigGlobal binds a generic wrapper to an already deployed contract.
func bindSystemConfigGlobal(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := SystemConfigGlobalMetaData.GetAbi()
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, *parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_SystemConfigGlobal *SystemConfigGlobalRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _SystemConfigGlobal.Contract.SystemConfigGlobalCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_SystemConfigGlobal *SystemConfigGlobalRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _SystemConfigGlobal.Contract.SystemConfigGlobalTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_SystemConfigGlobal *SystemConfigGlobalRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _SystemConfigGlobal.Contract.SystemConfigGlobalTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_SystemConfigGlobal *SystemConfigGlobalCallerRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _SystemConfigGlobal.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_SystemConfigGlobal *SystemConfigGlobalTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _SystemConfigGlobal.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_SystemConfigGlobal *SystemConfigGlobalTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _SystemConfigGlobal.Contract.contract.Transact(opts, method, params...)
}

// ATTESTATIONDIGEST is a free data retrieval call binding the contract method 0x3893af6d.
//
// Solidity: function ATTESTATION_DIGEST() view returns(bytes32)
func (_SystemConfigGlobal *SystemConfigGlobalCaller) ATTESTATIONDIGEST(opts *bind.CallOpts) ([32]byte, error) {
	var out []interface{}
	err := _SystemConfigGlobal.contract.Call(opts, &out, "ATTESTATION_DIGEST")

	if err != nil {
		return *new([32]byte), err
	}

	out0 := *abi.ConvertType(out[0], new([32]byte)).(*[32]byte)

	return out0, err

}

// ATTESTATIONDIGEST is a free data retrieval call binding the contract method 0x3893af6d.
//
// Solidity: function ATTESTATION_DIGEST() view returns(bytes32)
func (_SystemConfigGlobal *SystemConfigGlobalSession) ATTESTATIONDIGEST() ([32]byte, error) {
	return _SystemConfigGlobal.Contract.ATTESTATIONDIGEST(&_SystemConfigGlobal.CallOpts)
}

// ATTESTATIONDIGEST is a free data retrieval call binding the contract method 0x3893af6d.
//
// Solidity: function ATTESTATION_DIGEST() view returns(bytes32)
func (_SystemConfigGlobal *SystemConfigGlobalCallerSession) ATTESTATIONDIGEST() ([32]byte, error) {
	return _SystemConfigGlobal.Contract.ATTESTATIONDIGEST(&_SystemConfigGlobal.CallOpts)
}

// ATTESTATIONTBSPREFIX is a free data retrieval call binding the contract method 0x2d4bad8a.
//
// Solidity: function ATTESTATION_TBS_PREFIX() view returns(bytes32)
func (_SystemConfigGlobal *SystemConfigGlobalCaller) ATTESTATIONTBSPREFIX(opts *bind.CallOpts) ([32]byte, error) {
	var out []interface{}
	err := _SystemConfigGlobal.contract.Call(opts, &out, "ATTESTATION_TBS_PREFIX")

	if err != nil {
		return *new([32]byte), err
	}

	out0 := *abi.ConvertType(out[0], new([32]byte)).(*[32]byte)

	return out0, err

}

// ATTESTATIONTBSPREFIX is a free data retrieval call binding the contract method 0x2d4bad8a.
//
// Solidity: function ATTESTATION_TBS_PREFIX() view returns(bytes32)
func (_SystemConfigGlobal *SystemConfigGlobalSession) ATTESTATIONTBSPREFIX() ([32]byte, error) {
	return _SystemConfigGlobal.Contract.ATTESTATIONTBSPREFIX(&_SystemConfigGlobal.CallOpts)
}

// ATTESTATIONTBSPREFIX is a free data retrieval call binding the contract method 0x2d4bad8a.
//
// Solidity: function ATTESTATION_TBS_PREFIX() view returns(bytes32)
func (_SystemConfigGlobal *SystemConfigGlobalCallerSession) ATTESTATIONTBSPREFIX() ([32]byte, error) {
	return _SystemConfigGlobal.Contract.ATTESTATIONTBSPREFIX(&_SystemConfigGlobal.CallOpts)
}

// CABUNDLEKEY is a free data retrieval call binding the contract method 0x9cc3eb48.
//
// Solidity: function CABUNDLE_KEY() view returns(bytes32)
func (_SystemConfigGlobal *SystemConfigGlobalCaller) CABUNDLEKEY(opts *bind.CallOpts) ([32]byte, error) {
	var out []interface{}
	err := _SystemConfigGlobal.contract.Call(opts, &out, "CABUNDLE_KEY")

	if err != nil {
		return *new([32]byte), err
	}

	out0 := *abi.ConvertType(out[0], new([32]byte)).(*[32]byte)

	return out0, err

}

// CABUNDLEKEY is a free data retrieval call binding the contract method 0x9cc3eb48.
//
// Solidity: function CABUNDLE_KEY() view returns(bytes32)
func (_SystemConfigGlobal *SystemConfigGlobalSession) CABUNDLEKEY() ([32]byte, error) {
	return _SystemConfigGlobal.Contract.CABUNDLEKEY(&_SystemConfigGlobal.CallOpts)
}

// CABUNDLEKEY is a free data retrieval call binding the contract method 0x9cc3eb48.
//
// Solidity: function CABUNDLE_KEY() view returns(bytes32)
func (_SystemConfigGlobal *SystemConfigGlobalCallerSession) CABUNDLEKEY() ([32]byte, error) {
	return _SystemConfigGlobal.Contract.CABUNDLEKEY(&_SystemConfigGlobal.CallOpts)
}

// CERTIFICATEKEY is a free data retrieval call binding the contract method 0xae951149.
//
// Solidity: function CERTIFICATE_KEY() view returns(bytes32)
func (_SystemConfigGlobal *SystemConfigGlobalCaller) CERTIFICATEKEY(opts *bind.CallOpts) ([32]byte, error) {
	var out []interface{}
	err := _SystemConfigGlobal.contract.Call(opts, &out, "CERTIFICATE_KEY")

	if err != nil {
		return *new([32]byte), err
	}

	out0 := *abi.ConvertType(out[0], new([32]byte)).(*[32]byte)

	return out0, err

}

// CERTIFICATEKEY is a free data retrieval call binding the contract method 0xae951149.
//
// Solidity: function CERTIFICATE_KEY() view returns(bytes32)
func (_SystemConfigGlobal *SystemConfigGlobalSession) CERTIFICATEKEY() ([32]byte, error) {
	return _SystemConfigGlobal.Contract.CERTIFICATEKEY(&_SystemConfigGlobal.CallOpts)
}

// CERTIFICATEKEY is a free data retrieval call binding the contract method 0xae951149.
//
// Solidity: function CERTIFICATE_KEY() view returns(bytes32)
func (_SystemConfigGlobal *SystemConfigGlobalCallerSession) CERTIFICATEKEY() ([32]byte, error) {
	return _SystemConfigGlobal.Contract.CERTIFICATEKEY(&_SystemConfigGlobal.CallOpts)
}

// DIGESTKEY is a free data retrieval call binding the contract method 0x6be1e68b.
//
// Solidity: function DIGEST_KEY() view returns(bytes32)
func (_SystemConfigGlobal *SystemConfigGlobalCaller) DIGESTKEY(opts *bind.CallOpts) ([32]byte, error) {
	var out []interface{}
	err := _SystemConfigGlobal.contract.Call(opts, &out, "DIGEST_KEY")

	if err != nil {
		return *new([32]byte), err
	}

	out0 := *abi.ConvertType(out[0], new([32]byte)).(*[32]byte)

	return out0, err

}

// DIGESTKEY is a free data retrieval call binding the contract method 0x6be1e68b.
//
// Solidity: function DIGEST_KEY() view returns(bytes32)
func (_SystemConfigGlobal *SystemConfigGlobalSession) DIGESTKEY() ([32]byte, error) {
	return _SystemConfigGlobal.Contract.DIGESTKEY(&_SystemConfigGlobal.CallOpts)
}

// DIGESTKEY is a free data retrieval call binding the contract method 0x6be1e68b.
//
// Solidity: function DIGEST_KEY() view returns(bytes32)
func (_SystemConfigGlobal *SystemConfigGlobalCallerSession) DIGESTKEY() ([32]byte, error) {
	return _SystemConfigGlobal.Contract.DIGESTKEY(&_SystemConfigGlobal.CallOpts)
}

// MAXAGE is a free data retrieval call binding the contract method 0x0dcaeaf2.
//
// Solidity: function MAX_AGE() view returns(uint256)
func (_SystemConfigGlobal *SystemConfigGlobalCaller) MAXAGE(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _SystemConfigGlobal.contract.Call(opts, &out, "MAX_AGE")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// MAXAGE is a free data retrieval call binding the contract method 0x0dcaeaf2.
//
// Solidity: function MAX_AGE() view returns(uint256)
func (_SystemConfigGlobal *SystemConfigGlobalSession) MAXAGE() (*big.Int, error) {
	return _SystemConfigGlobal.Contract.MAXAGE(&_SystemConfigGlobal.CallOpts)
}

// MAXAGE is a free data retrieval call binding the contract method 0x0dcaeaf2.
//
// Solidity: function MAX_AGE() view returns(uint256)
func (_SystemConfigGlobal *SystemConfigGlobalCallerSession) MAXAGE() (*big.Int, error) {
	return _SystemConfigGlobal.Contract.MAXAGE(&_SystemConfigGlobal.CallOpts)
}

// MODULEIDKEY is a free data retrieval call binding the contract method 0x9adb2d68.
//
// Solidity: function MODULE_ID_KEY() view returns(bytes32)
func (_SystemConfigGlobal *SystemConfigGlobalCaller) MODULEIDKEY(opts *bind.CallOpts) ([32]byte, error) {
	var out []interface{}
	err := _SystemConfigGlobal.contract.Call(opts, &out, "MODULE_ID_KEY")

	if err != nil {
		return *new([32]byte), err
	}

	out0 := *abi.ConvertType(out[0], new([32]byte)).(*[32]byte)

	return out0, err

}

// MODULEIDKEY is a free data retrieval call binding the contract method 0x9adb2d68.
//
// Solidity: function MODULE_ID_KEY() view returns(bytes32)
func (_SystemConfigGlobal *SystemConfigGlobalSession) MODULEIDKEY() ([32]byte, error) {
	return _SystemConfigGlobal.Contract.MODULEIDKEY(&_SystemConfigGlobal.CallOpts)
}

// MODULEIDKEY is a free data retrieval call binding the contract method 0x9adb2d68.
//
// Solidity: function MODULE_ID_KEY() view returns(bytes32)
func (_SystemConfigGlobal *SystemConfigGlobalCallerSession) MODULEIDKEY() ([32]byte, error) {
	return _SystemConfigGlobal.Contract.MODULEIDKEY(&_SystemConfigGlobal.CallOpts)
}

// NONCEKEY is a free data retrieval call binding the contract method 0x6378aad5.
//
// Solidity: function NONCE_KEY() view returns(bytes32)
func (_SystemConfigGlobal *SystemConfigGlobalCaller) NONCEKEY(opts *bind.CallOpts) ([32]byte, error) {
	var out []interface{}
	err := _SystemConfigGlobal.contract.Call(opts, &out, "NONCE_KEY")

	if err != nil {
		return *new([32]byte), err
	}

	out0 := *abi.ConvertType(out[0], new([32]byte)).(*[32]byte)

	return out0, err

}

// NONCEKEY is a free data retrieval call binding the contract method 0x6378aad5.
//
// Solidity: function NONCE_KEY() view returns(bytes32)
func (_SystemConfigGlobal *SystemConfigGlobalSession) NONCEKEY() ([32]byte, error) {
	return _SystemConfigGlobal.Contract.NONCEKEY(&_SystemConfigGlobal.CallOpts)
}

// NONCEKEY is a free data retrieval call binding the contract method 0x6378aad5.
//
// Solidity: function NONCE_KEY() view returns(bytes32)
func (_SystemConfigGlobal *SystemConfigGlobalCallerSession) NONCEKEY() ([32]byte, error) {
	return _SystemConfigGlobal.Contract.NONCEKEY(&_SystemConfigGlobal.CallOpts)
}

// PCRSKEY is a free data retrieval call binding the contract method 0xb22bed7e.
//
// Solidity: function PCRS_KEY() view returns(bytes32)
func (_SystemConfigGlobal *SystemConfigGlobalCaller) PCRSKEY(opts *bind.CallOpts) ([32]byte, error) {
	var out []interface{}
	err := _SystemConfigGlobal.contract.Call(opts, &out, "PCRS_KEY")

	if err != nil {
		return *new([32]byte), err
	}

	out0 := *abi.ConvertType(out[0], new([32]byte)).(*[32]byte)

	return out0, err

}

// PCRSKEY is a free data retrieval call binding the contract method 0xb22bed7e.
//
// Solidity: function PCRS_KEY() view returns(bytes32)
func (_SystemConfigGlobal *SystemConfigGlobalSession) PCRSKEY() ([32]byte, error) {
	return _SystemConfigGlobal.Contract.PCRSKEY(&_SystemConfigGlobal.CallOpts)
}

// PCRSKEY is a free data retrieval call binding the contract method 0xb22bed7e.
//
// Solidity: function PCRS_KEY() view returns(bytes32)
func (_SystemConfigGlobal *SystemConfigGlobalCallerSession) PCRSKEY() ([32]byte, error) {
	return _SystemConfigGlobal.Contract.PCRSKEY(&_SystemConfigGlobal.CallOpts)
}

// PUBLICKEYKEY is a free data retrieval call binding the contract method 0xe8b6d3fe.
//
// Solidity: function PUBLIC_KEY_KEY() view returns(bytes32)
func (_SystemConfigGlobal *SystemConfigGlobalCaller) PUBLICKEYKEY(opts *bind.CallOpts) ([32]byte, error) {
	var out []interface{}
	err := _SystemConfigGlobal.contract.Call(opts, &out, "PUBLIC_KEY_KEY")

	if err != nil {
		return *new([32]byte), err
	}

	out0 := *abi.ConvertType(out[0], new([32]byte)).(*[32]byte)

	return out0, err

}

// PUBLICKEYKEY is a free data retrieval call binding the contract method 0xe8b6d3fe.
//
// Solidity: function PUBLIC_KEY_KEY() view returns(bytes32)
func (_SystemConfigGlobal *SystemConfigGlobalSession) PUBLICKEYKEY() ([32]byte, error) {
	return _SystemConfigGlobal.Contract.PUBLICKEYKEY(&_SystemConfigGlobal.CallOpts)
}

// PUBLICKEYKEY is a free data retrieval call binding the contract method 0xe8b6d3fe.
//
// Solidity: function PUBLIC_KEY_KEY() view returns(bytes32)
func (_SystemConfigGlobal *SystemConfigGlobalCallerSession) PUBLICKEYKEY() ([32]byte, error) {
	return _SystemConfigGlobal.Contract.PUBLICKEYKEY(&_SystemConfigGlobal.CallOpts)
}

// TIMESTAMPKEY is a free data retrieval call binding the contract method 0xe0a655ff.
//
// Solidity: function TIMESTAMP_KEY() view returns(bytes32)
func (_SystemConfigGlobal *SystemConfigGlobalCaller) TIMESTAMPKEY(opts *bind.CallOpts) ([32]byte, error) {
	var out []interface{}
	err := _SystemConfigGlobal.contract.Call(opts, &out, "TIMESTAMP_KEY")

	if err != nil {
		return *new([32]byte), err
	}

	out0 := *abi.ConvertType(out[0], new([32]byte)).(*[32]byte)

	return out0, err

}

// TIMESTAMPKEY is a free data retrieval call binding the contract method 0xe0a655ff.
//
// Solidity: function TIMESTAMP_KEY() view returns(bytes32)
func (_SystemConfigGlobal *SystemConfigGlobalSession) TIMESTAMPKEY() ([32]byte, error) {
	return _SystemConfigGlobal.Contract.TIMESTAMPKEY(&_SystemConfigGlobal.CallOpts)
}

// TIMESTAMPKEY is a free data retrieval call binding the contract method 0xe0a655ff.
//
// Solidity: function TIMESTAMP_KEY() view returns(bytes32)
func (_SystemConfigGlobal *SystemConfigGlobalCallerSession) TIMESTAMPKEY() ([32]byte, error) {
	return _SystemConfigGlobal.Contract.TIMESTAMPKEY(&_SystemConfigGlobal.CallOpts)
}

// USERDATAKEY is a free data retrieval call binding the contract method 0xcebf08d7.
//
// Solidity: function USER_DATA_KEY() view returns(bytes32)
func (_SystemConfigGlobal *SystemConfigGlobalCaller) USERDATAKEY(opts *bind.CallOpts) ([32]byte, error) {
	var out []interface{}
	err := _SystemConfigGlobal.contract.Call(opts, &out, "USER_DATA_KEY")

	if err != nil {
		return *new([32]byte), err
	}

	out0 := *abi.ConvertType(out[0], new([32]byte)).(*[32]byte)

	return out0, err

}

// USERDATAKEY is a free data retrieval call binding the contract method 0xcebf08d7.
//
// Solidity: function USER_DATA_KEY() view returns(bytes32)
func (_SystemConfigGlobal *SystemConfigGlobalSession) USERDATAKEY() ([32]byte, error) {
	return _SystemConfigGlobal.Contract.USERDATAKEY(&_SystemConfigGlobal.CallOpts)
}

// USERDATAKEY is a free data retrieval call binding the contract method 0xcebf08d7.
//
// Solidity: function USER_DATA_KEY() view returns(bytes32)
func (_SystemConfigGlobal *SystemConfigGlobalCallerSession) USERDATAKEY() ([32]byte, error) {
	return _SystemConfigGlobal.Contract.USERDATAKEY(&_SystemConfigGlobal.CallOpts)
}

// CertManager is a free data retrieval call binding the contract method 0x739e8484.
//
// Solidity: function certManager() view returns(address)
func (_SystemConfigGlobal *SystemConfigGlobalCaller) CertManager(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _SystemConfigGlobal.contract.Call(opts, &out, "certManager")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// CertManager is a free data retrieval call binding the contract method 0x739e8484.
//
// Solidity: function certManager() view returns(address)
func (_SystemConfigGlobal *SystemConfigGlobalSession) CertManager() (common.Address, error) {
	return _SystemConfigGlobal.Contract.CertManager(&_SystemConfigGlobal.CallOpts)
}

// CertManager is a free data retrieval call binding the contract method 0x739e8484.
//
// Solidity: function certManager() view returns(address)
func (_SystemConfigGlobal *SystemConfigGlobalCallerSession) CertManager() (common.Address, error) {
	return _SystemConfigGlobal.Contract.CertManager(&_SystemConfigGlobal.CallOpts)
}

// DecodeAttestationTbs is a free data retrieval call binding the contract method 0xa903a277.
//
// Solidity: function decodeAttestationTbs(bytes attestation) pure returns(bytes attestationTbs, bytes signature)
func (_SystemConfigGlobal *SystemConfigGlobalCaller) DecodeAttestationTbs(opts *bind.CallOpts, attestation []byte) (struct {
	AttestationTbs []byte
	Signature      []byte
}, error) {
	var out []interface{}
	err := _SystemConfigGlobal.contract.Call(opts, &out, "decodeAttestationTbs", attestation)

	outstruct := new(struct {
		AttestationTbs []byte
		Signature      []byte
	})
	if err != nil {
		return *outstruct, err
	}

	outstruct.AttestationTbs = *abi.ConvertType(out[0], new([]byte)).(*[]byte)
	outstruct.Signature = *abi.ConvertType(out[1], new([]byte)).(*[]byte)

	return *outstruct, err

}

// DecodeAttestationTbs is a free data retrieval call binding the contract method 0xa903a277.
//
// Solidity: function decodeAttestationTbs(bytes attestation) pure returns(bytes attestationTbs, bytes signature)
func (_SystemConfigGlobal *SystemConfigGlobalSession) DecodeAttestationTbs(attestation []byte) (struct {
	AttestationTbs []byte
	Signature      []byte
}, error) {
	return _SystemConfigGlobal.Contract.DecodeAttestationTbs(&_SystemConfigGlobal.CallOpts, attestation)
}

// DecodeAttestationTbs is a free data retrieval call binding the contract method 0xa903a277.
//
// Solidity: function decodeAttestationTbs(bytes attestation) pure returns(bytes attestationTbs, bytes signature)
func (_SystemConfigGlobal *SystemConfigGlobalCallerSession) DecodeAttestationTbs(attestation []byte) (struct {
	AttestationTbs []byte
	Signature      []byte
}, error) {
	return _SystemConfigGlobal.Contract.DecodeAttestationTbs(&_SystemConfigGlobal.CallOpts, attestation)
}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() view returns(address)
func (_SystemConfigGlobal *SystemConfigGlobalCaller) Owner(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _SystemConfigGlobal.contract.Call(opts, &out, "owner")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() view returns(address)
func (_SystemConfigGlobal *SystemConfigGlobalSession) Owner() (common.Address, error) {
	return _SystemConfigGlobal.Contract.Owner(&_SystemConfigGlobal.CallOpts)
}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() view returns(address)
func (_SystemConfigGlobal *SystemConfigGlobalCallerSession) Owner() (common.Address, error) {
	return _SystemConfigGlobal.Contract.Owner(&_SystemConfigGlobal.CallOpts)
}

// Proposer is a free data retrieval call binding the contract method 0xa8e4fb90.
//
// Solidity: function proposer() view returns(address)
func (_SystemConfigGlobal *SystemConfigGlobalCaller) Proposer(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _SystemConfigGlobal.contract.Call(opts, &out, "proposer")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// Proposer is a free data retrieval call binding the contract method 0xa8e4fb90.
//
// Solidity: function proposer() view returns(address)
func (_SystemConfigGlobal *SystemConfigGlobalSession) Proposer() (common.Address, error) {
	return _SystemConfigGlobal.Contract.Proposer(&_SystemConfigGlobal.CallOpts)
}

// Proposer is a free data retrieval call binding the contract method 0xa8e4fb90.
//
// Solidity: function proposer() view returns(address)
func (_SystemConfigGlobal *SystemConfigGlobalCallerSession) Proposer() (common.Address, error) {
	return _SystemConfigGlobal.Contract.Proposer(&_SystemConfigGlobal.CallOpts)
}

// ValidPCR0s is a free data retrieval call binding the contract method 0x295840d9.
//
// Solidity: function validPCR0s(bytes32 ) view returns(bool)
func (_SystemConfigGlobal *SystemConfigGlobalCaller) ValidPCR0s(opts *bind.CallOpts, arg0 [32]byte) (bool, error) {
	var out []interface{}
	err := _SystemConfigGlobal.contract.Call(opts, &out, "validPCR0s", arg0)

	if err != nil {
		return *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new(bool)).(*bool)

	return out0, err

}

// ValidPCR0s is a free data retrieval call binding the contract method 0x295840d9.
//
// Solidity: function validPCR0s(bytes32 ) view returns(bool)
func (_SystemConfigGlobal *SystemConfigGlobalSession) ValidPCR0s(arg0 [32]byte) (bool, error) {
	return _SystemConfigGlobal.Contract.ValidPCR0s(&_SystemConfigGlobal.CallOpts, arg0)
}

// ValidPCR0s is a free data retrieval call binding the contract method 0x295840d9.
//
// Solidity: function validPCR0s(bytes32 ) view returns(bool)
func (_SystemConfigGlobal *SystemConfigGlobalCallerSession) ValidPCR0s(arg0 [32]byte) (bool, error) {
	return _SystemConfigGlobal.Contract.ValidPCR0s(&_SystemConfigGlobal.CallOpts, arg0)
}

// ValidSigners is a free data retrieval call binding the contract method 0x6a73b00b.
//
// Solidity: function validSigners(address ) view returns(bool)
func (_SystemConfigGlobal *SystemConfigGlobalCaller) ValidSigners(opts *bind.CallOpts, arg0 common.Address) (bool, error) {
	var out []interface{}
	err := _SystemConfigGlobal.contract.Call(opts, &out, "validSigners", arg0)

	if err != nil {
		return *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new(bool)).(*bool)

	return out0, err

}

// ValidSigners is a free data retrieval call binding the contract method 0x6a73b00b.
//
// Solidity: function validSigners(address ) view returns(bool)
func (_SystemConfigGlobal *SystemConfigGlobalSession) ValidSigners(arg0 common.Address) (bool, error) {
	return _SystemConfigGlobal.Contract.ValidSigners(&_SystemConfigGlobal.CallOpts, arg0)
}

// ValidSigners is a free data retrieval call binding the contract method 0x6a73b00b.
//
// Solidity: function validSigners(address ) view returns(bool)
func (_SystemConfigGlobal *SystemConfigGlobalCallerSession) ValidSigners(arg0 common.Address) (bool, error) {
	return _SystemConfigGlobal.Contract.ValidSigners(&_SystemConfigGlobal.CallOpts, arg0)
}

// Version is a free data retrieval call binding the contract method 0x54fd4d50.
//
// Solidity: function version() pure returns(string)
func (_SystemConfigGlobal *SystemConfigGlobalCaller) Version(opts *bind.CallOpts) (string, error) {
	var out []interface{}
	err := _SystemConfigGlobal.contract.Call(opts, &out, "version")

	if err != nil {
		return *new(string), err
	}

	out0 := *abi.ConvertType(out[0], new(string)).(*string)

	return out0, err

}

// Version is a free data retrieval call binding the contract method 0x54fd4d50.
//
// Solidity: function version() pure returns(string)
func (_SystemConfigGlobal *SystemConfigGlobalSession) Version() (string, error) {
	return _SystemConfigGlobal.Contract.Version(&_SystemConfigGlobal.CallOpts)
}

// Version is a free data retrieval call binding the contract method 0x54fd4d50.
//
// Solidity: function version() pure returns(string)
func (_SystemConfigGlobal *SystemConfigGlobalCallerSession) Version() (string, error) {
	return _SystemConfigGlobal.Contract.Version(&_SystemConfigGlobal.CallOpts)
}

// DeregisterPCR0 is a paid mutator transaction binding the contract method 0x50697a3f.
//
// Solidity: function deregisterPCR0(bytes pcr0) returns()
func (_SystemConfigGlobal *SystemConfigGlobalTransactor) DeregisterPCR0(opts *bind.TransactOpts, pcr0 []byte) (*types.Transaction, error) {
	return _SystemConfigGlobal.contract.Transact(opts, "deregisterPCR0", pcr0)
}

// DeregisterPCR0 is a paid mutator transaction binding the contract method 0x50697a3f.
//
// Solidity: function deregisterPCR0(bytes pcr0) returns()
func (_SystemConfigGlobal *SystemConfigGlobalSession) DeregisterPCR0(pcr0 []byte) (*types.Transaction, error) {
	return _SystemConfigGlobal.Contract.DeregisterPCR0(&_SystemConfigGlobal.TransactOpts, pcr0)
}

// DeregisterPCR0 is a paid mutator transaction binding the contract method 0x50697a3f.
//
// Solidity: function deregisterPCR0(bytes pcr0) returns()
func (_SystemConfigGlobal *SystemConfigGlobalTransactorSession) DeregisterPCR0(pcr0 []byte) (*types.Transaction, error) {
	return _SystemConfigGlobal.Contract.DeregisterPCR0(&_SystemConfigGlobal.TransactOpts, pcr0)
}

// DeregisterSigner is a paid mutator transaction binding the contract method 0x0ba24fe0.
//
// Solidity: function deregisterSigner(address signer) returns()
func (_SystemConfigGlobal *SystemConfigGlobalTransactor) DeregisterSigner(opts *bind.TransactOpts, signer common.Address) (*types.Transaction, error) {
	return _SystemConfigGlobal.contract.Transact(opts, "deregisterSigner", signer)
}

// DeregisterSigner is a paid mutator transaction binding the contract method 0x0ba24fe0.
//
// Solidity: function deregisterSigner(address signer) returns()
func (_SystemConfigGlobal *SystemConfigGlobalSession) DeregisterSigner(signer common.Address) (*types.Transaction, error) {
	return _SystemConfigGlobal.Contract.DeregisterSigner(&_SystemConfigGlobal.TransactOpts, signer)
}

// DeregisterSigner is a paid mutator transaction binding the contract method 0x0ba24fe0.
//
// Solidity: function deregisterSigner(address signer) returns()
func (_SystemConfigGlobal *SystemConfigGlobalTransactorSession) DeregisterSigner(signer common.Address) (*types.Transaction, error) {
	return _SystemConfigGlobal.Contract.DeregisterSigner(&_SystemConfigGlobal.TransactOpts, signer)
}

// Initialize is a paid mutator transaction binding the contract method 0xc4d66de8.
//
// Solidity: function initialize(address _owner) returns()
func (_SystemConfigGlobal *SystemConfigGlobalTransactor) Initialize(opts *bind.TransactOpts, _owner common.Address) (*types.Transaction, error) {
	return _SystemConfigGlobal.contract.Transact(opts, "initialize", _owner)
}

// Initialize is a paid mutator transaction binding the contract method 0xc4d66de8.
//
// Solidity: function initialize(address _owner) returns()
func (_SystemConfigGlobal *SystemConfigGlobalSession) Initialize(_owner common.Address) (*types.Transaction, error) {
	return _SystemConfigGlobal.Contract.Initialize(&_SystemConfigGlobal.TransactOpts, _owner)
}

// Initialize is a paid mutator transaction binding the contract method 0xc4d66de8.
//
// Solidity: function initialize(address _owner) returns()
func (_SystemConfigGlobal *SystemConfigGlobalTransactorSession) Initialize(_owner common.Address) (*types.Transaction, error) {
	return _SystemConfigGlobal.Contract.Initialize(&_SystemConfigGlobal.TransactOpts, _owner)
}

// RegisterPCR0 is a paid mutator transaction binding the contract method 0x2c68fa02.
//
// Solidity: function registerPCR0(bytes pcr0) returns()
func (_SystemConfigGlobal *SystemConfigGlobalTransactor) RegisterPCR0(opts *bind.TransactOpts, pcr0 []byte) (*types.Transaction, error) {
	return _SystemConfigGlobal.contract.Transact(opts, "registerPCR0", pcr0)
}

// RegisterPCR0 is a paid mutator transaction binding the contract method 0x2c68fa02.
//
// Solidity: function registerPCR0(bytes pcr0) returns()
func (_SystemConfigGlobal *SystemConfigGlobalSession) RegisterPCR0(pcr0 []byte) (*types.Transaction, error) {
	return _SystemConfigGlobal.Contract.RegisterPCR0(&_SystemConfigGlobal.TransactOpts, pcr0)
}

// RegisterPCR0 is a paid mutator transaction binding the contract method 0x2c68fa02.
//
// Solidity: function registerPCR0(bytes pcr0) returns()
func (_SystemConfigGlobal *SystemConfigGlobalTransactorSession) RegisterPCR0(pcr0 []byte) (*types.Transaction, error) {
	return _SystemConfigGlobal.Contract.RegisterPCR0(&_SystemConfigGlobal.TransactOpts, pcr0)
}

// RegisterSigner is a paid mutator transaction binding the contract method 0xba58e82a.
//
// Solidity: function registerSigner(bytes attestationTbs, bytes signature) returns()
func (_SystemConfigGlobal *SystemConfigGlobalTransactor) RegisterSigner(opts *bind.TransactOpts, attestationTbs []byte, signature []byte) (*types.Transaction, error) {
	return _SystemConfigGlobal.contract.Transact(opts, "registerSigner", attestationTbs, signature)
}

// RegisterSigner is a paid mutator transaction binding the contract method 0xba58e82a.
//
// Solidity: function registerSigner(bytes attestationTbs, bytes signature) returns()
func (_SystemConfigGlobal *SystemConfigGlobalSession) RegisterSigner(attestationTbs []byte, signature []byte) (*types.Transaction, error) {
	return _SystemConfigGlobal.Contract.RegisterSigner(&_SystemConfigGlobal.TransactOpts, attestationTbs, signature)
}

// RegisterSigner is a paid mutator transaction binding the contract method 0xba58e82a.
//
// Solidity: function registerSigner(bytes attestationTbs, bytes signature) returns()
func (_SystemConfigGlobal *SystemConfigGlobalTransactorSession) RegisterSigner(attestationTbs []byte, signature []byte) (*types.Transaction, error) {
	return _SystemConfigGlobal.Contract.RegisterSigner(&_SystemConfigGlobal.TransactOpts, attestationTbs, signature)
}

// RenounceOwnership is a paid mutator transaction binding the contract method 0x715018a6.
//
// Solidity: function renounceOwnership() returns()
func (_SystemConfigGlobal *SystemConfigGlobalTransactor) RenounceOwnership(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _SystemConfigGlobal.contract.Transact(opts, "renounceOwnership")
}

// RenounceOwnership is a paid mutator transaction binding the contract method 0x715018a6.
//
// Solidity: function renounceOwnership() returns()
func (_SystemConfigGlobal *SystemConfigGlobalSession) RenounceOwnership() (*types.Transaction, error) {
	return _SystemConfigGlobal.Contract.RenounceOwnership(&_SystemConfigGlobal.TransactOpts)
}

// RenounceOwnership is a paid mutator transaction binding the contract method 0x715018a6.
//
// Solidity: function renounceOwnership() returns()
func (_SystemConfigGlobal *SystemConfigGlobalTransactorSession) RenounceOwnership() (*types.Transaction, error) {
	return _SystemConfigGlobal.Contract.RenounceOwnership(&_SystemConfigGlobal.TransactOpts)
}

// SetProposer is a paid mutator transaction binding the contract method 0x1fb4a228.
//
// Solidity: function setProposer(address _proposer) returns()
func (_SystemConfigGlobal *SystemConfigGlobalTransactor) SetProposer(opts *bind.TransactOpts, _proposer common.Address) (*types.Transaction, error) {
	return _SystemConfigGlobal.contract.Transact(opts, "setProposer", _proposer)
}

// SetProposer is a paid mutator transaction binding the contract method 0x1fb4a228.
//
// Solidity: function setProposer(address _proposer) returns()
func (_SystemConfigGlobal *SystemConfigGlobalSession) SetProposer(_proposer common.Address) (*types.Transaction, error) {
	return _SystemConfigGlobal.Contract.SetProposer(&_SystemConfigGlobal.TransactOpts, _proposer)
}

// SetProposer is a paid mutator transaction binding the contract method 0x1fb4a228.
//
// Solidity: function setProposer(address _proposer) returns()
func (_SystemConfigGlobal *SystemConfigGlobalTransactorSession) SetProposer(_proposer common.Address) (*types.Transaction, error) {
	return _SystemConfigGlobal.Contract.SetProposer(&_SystemConfigGlobal.TransactOpts, _proposer)
}

// TransferOwnership is a paid mutator transaction binding the contract method 0xf2fde38b.
//
// Solidity: function transferOwnership(address newOwner) returns()
func (_SystemConfigGlobal *SystemConfigGlobalTransactor) TransferOwnership(opts *bind.TransactOpts, newOwner common.Address) (*types.Transaction, error) {
	return _SystemConfigGlobal.contract.Transact(opts, "transferOwnership", newOwner)
}

// TransferOwnership is a paid mutator transaction binding the contract method 0xf2fde38b.
//
// Solidity: function transferOwnership(address newOwner) returns()
func (_SystemConfigGlobal *SystemConfigGlobalSession) TransferOwnership(newOwner common.Address) (*types.Transaction, error) {
	return _SystemConfigGlobal.Contract.TransferOwnership(&_SystemConfigGlobal.TransactOpts, newOwner)
}

// TransferOwnership is a paid mutator transaction binding the contract method 0xf2fde38b.
//
// Solidity: function transferOwnership(address newOwner) returns()
func (_SystemConfigGlobal *SystemConfigGlobalTransactorSession) TransferOwnership(newOwner common.Address) (*types.Transaction, error) {
	return _SystemConfigGlobal.Contract.TransferOwnership(&_SystemConfigGlobal.TransactOpts, newOwner)
}

// ValidateAttestation is a paid mutator transaction binding the contract method 0x05f7aead.
//
// Solidity: function validateAttestation(bytes attestationTbs, bytes signature) returns((uint256,uint64,uint256,uint256[],uint256,uint256[],uint256,uint256,uint256))
func (_SystemConfigGlobal *SystemConfigGlobalTransactor) ValidateAttestation(opts *bind.TransactOpts, attestationTbs []byte, signature []byte) (*types.Transaction, error) {
	return _SystemConfigGlobal.contract.Transact(opts, "validateAttestation", attestationTbs, signature)
}

// ValidateAttestation is a paid mutator transaction binding the contract method 0x05f7aead.
//
// Solidity: function validateAttestation(bytes attestationTbs, bytes signature) returns((uint256,uint64,uint256,uint256[],uint256,uint256[],uint256,uint256,uint256))
func (_SystemConfigGlobal *SystemConfigGlobalSession) ValidateAttestation(attestationTbs []byte, signature []byte) (*types.Transaction, error) {
	return _SystemConfigGlobal.Contract.ValidateAttestation(&_SystemConfigGlobal.TransactOpts, attestationTbs, signature)
}

// ValidateAttestation is a paid mutator transaction binding the contract method 0x05f7aead.
//
// Solidity: function validateAttestation(bytes attestationTbs, bytes signature) returns((uint256,uint64,uint256,uint256[],uint256,uint256[],uint256,uint256,uint256))
func (_SystemConfigGlobal *SystemConfigGlobalTransactorSession) ValidateAttestation(attestationTbs []byte, signature []byte) (*types.Transaction, error) {
	return _SystemConfigGlobal.Contract.ValidateAttestation(&_SystemConfigGlobal.TransactOpts, attestationTbs, signature)
}

// SystemConfigGlobalInitializedIterator is returned from FilterInitialized and is used to iterate over the raw logs and unpacked data for Initialized events raised by the SystemConfigGlobal contract.
type SystemConfigGlobalInitializedIterator struct {
	Event *SystemConfigGlobalInitialized // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *SystemConfigGlobalInitializedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(SystemConfigGlobalInitialized)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(SystemConfigGlobalInitialized)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *SystemConfigGlobalInitializedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *SystemConfigGlobalInitializedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// SystemConfigGlobalInitialized represents a Initialized event raised by the SystemConfigGlobal contract.
type SystemConfigGlobalInitialized struct {
	Version uint8
	Raw     types.Log // Blockchain specific contextual infos
}

// FilterInitialized is a free log retrieval operation binding the contract event 0x7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498.
//
// Solidity: event Initialized(uint8 version)
func (_SystemConfigGlobal *SystemConfigGlobalFilterer) FilterInitialized(opts *bind.FilterOpts) (*SystemConfigGlobalInitializedIterator, error) {

	logs, sub, err := _SystemConfigGlobal.contract.FilterLogs(opts, "Initialized")
	if err != nil {
		return nil, err
	}
	return &SystemConfigGlobalInitializedIterator{contract: _SystemConfigGlobal.contract, event: "Initialized", logs: logs, sub: sub}, nil
}

// WatchInitialized is a free log subscription operation binding the contract event 0x7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498.
//
// Solidity: event Initialized(uint8 version)
func (_SystemConfigGlobal *SystemConfigGlobalFilterer) WatchInitialized(opts *bind.WatchOpts, sink chan<- *SystemConfigGlobalInitialized) (event.Subscription, error) {

	logs, sub, err := _SystemConfigGlobal.contract.WatchLogs(opts, "Initialized")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(SystemConfigGlobalInitialized)
				if err := _SystemConfigGlobal.contract.UnpackLog(event, "Initialized", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseInitialized is a log parse operation binding the contract event 0x7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498.
//
// Solidity: event Initialized(uint8 version)
func (_SystemConfigGlobal *SystemConfigGlobalFilterer) ParseInitialized(log types.Log) (*SystemConfigGlobalInitialized, error) {
	event := new(SystemConfigGlobalInitialized)
	if err := _SystemConfigGlobal.contract.UnpackLog(event, "Initialized", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// SystemConfigGlobalOwnershipTransferredIterator is returned from FilterOwnershipTransferred and is used to iterate over the raw logs and unpacked data for OwnershipTransferred events raised by the SystemConfigGlobal contract.
type SystemConfigGlobalOwnershipTransferredIterator struct {
	Event *SystemConfigGlobalOwnershipTransferred // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *SystemConfigGlobalOwnershipTransferredIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(SystemConfigGlobalOwnershipTransferred)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(SystemConfigGlobalOwnershipTransferred)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *SystemConfigGlobalOwnershipTransferredIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *SystemConfigGlobalOwnershipTransferredIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// SystemConfigGlobalOwnershipTransferred represents a OwnershipTransferred event raised by the SystemConfigGlobal contract.
type SystemConfigGlobalOwnershipTransferred struct {
	PreviousOwner common.Address
	NewOwner      common.Address
	Raw           types.Log // Blockchain specific contextual infos
}

// FilterOwnershipTransferred is a free log retrieval operation binding the contract event 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0.
//
// Solidity: event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)
func (_SystemConfigGlobal *SystemConfigGlobalFilterer) FilterOwnershipTransferred(opts *bind.FilterOpts, previousOwner []common.Address, newOwner []common.Address) (*SystemConfigGlobalOwnershipTransferredIterator, error) {

	var previousOwnerRule []interface{}
	for _, previousOwnerItem := range previousOwner {
		previousOwnerRule = append(previousOwnerRule, previousOwnerItem)
	}
	var newOwnerRule []interface{}
	for _, newOwnerItem := range newOwner {
		newOwnerRule = append(newOwnerRule, newOwnerItem)
	}

	logs, sub, err := _SystemConfigGlobal.contract.FilterLogs(opts, "OwnershipTransferred", previousOwnerRule, newOwnerRule)
	if err != nil {
		return nil, err
	}
	return &SystemConfigGlobalOwnershipTransferredIterator{contract: _SystemConfigGlobal.contract, event: "OwnershipTransferred", logs: logs, sub: sub}, nil
}

// WatchOwnershipTransferred is a free log subscription operation binding the contract event 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0.
//
// Solidity: event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)
func (_SystemConfigGlobal *SystemConfigGlobalFilterer) WatchOwnershipTransferred(opts *bind.WatchOpts, sink chan<- *SystemConfigGlobalOwnershipTransferred, previousOwner []common.Address, newOwner []common.Address) (event.Subscription, error) {

	var previousOwnerRule []interface{}
	for _, previousOwnerItem := range previousOwner {
		previousOwnerRule = append(previousOwnerRule, previousOwnerItem)
	}
	var newOwnerRule []interface{}
	for _, newOwnerItem := range newOwner {
		newOwnerRule = append(newOwnerRule, newOwnerItem)
	}

	logs, sub, err := _SystemConfigGlobal.contract.WatchLogs(opts, "OwnershipTransferred", previousOwnerRule, newOwnerRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(SystemConfigGlobalOwnershipTransferred)
				if err := _SystemConfigGlobal.contract.UnpackLog(event, "OwnershipTransferred", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseOwnershipTransferred is a log parse operation binding the contract event 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0.
//
// Solidity: event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)
func (_SystemConfigGlobal *SystemConfigGlobalFilterer) ParseOwnershipTransferred(log types.Log) (*SystemConfigGlobalOwnershipTransferred, error) {
	event := new(SystemConfigGlobalOwnershipTransferred)
	if err := _SystemConfigGlobal.contract.UnpackLog(event, "OwnershipTransferred", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}
