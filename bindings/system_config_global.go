// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package bindings

import (
	"errors"
	"math/big"
	"strings"

	ethereum "github.com/ethereum/go-ethereum"
	"github.com/ethereum/go-ethereum/accounts/abi"
	"github.com/ethereum/go-ethereum/accounts/abi/bind"
	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/core/types"
	"github.com/ethereum/go-ethereum/event"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = errors.New
	_ = big.NewInt
	_ = strings.NewReader
	_ = ethereum.NotFound
	_ = bind.Bind
	_ = common.Big1
	_ = types.BloomLookup
	_ = event.NewSubscription
	_ = abi.ConvertType
)

// NitroValidatorPtrs is an auto generated low-level Go binding around an user-defined struct.
type NitroValidatorPtrs struct {
	ModuleID  *big.Int
	Timestamp uint64
	Digest    *big.Int
	Pcrs      []*big.Int
	Cert      *big.Int
	Cabundle  []*big.Int
	PublicKey *big.Int
	UserData  *big.Int
	Nonce     *big.Int
}

// SystemConfigGlobalMetaData contains all meta data concerning the SystemConfigGlobal contract.
var SystemConfigGlobalMetaData = &bind.MetaData{
	ABI: "[{\"type\":\"constructor\",\"inputs\":[{\"name\":\"certManager\",\"type\":\"address\",\"internalType\":\"contractICertManager\"}],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"ATTESTATION_DIGEST\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\",\"internalType\":\"bytes32\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"ATTESTATION_TBS_PREFIX\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\",\"internalType\":\"bytes32\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"CABUNDLE_KEY\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\",\"internalType\":\"bytes32\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"CERTIFICATE_KEY\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\",\"internalType\":\"bytes32\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"DIGEST_KEY\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\",\"internalType\":\"bytes32\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"MAX_AGE\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"uint256\",\"internalType\":\"uint256\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"MODULE_ID_KEY\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\",\"internalType\":\"bytes32\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"NONCE_KEY\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\",\"internalType\":\"bytes32\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"PCRS_KEY\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\",\"internalType\":\"bytes32\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"PUBLIC_KEY_KEY\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\",\"internalType\":\"bytes32\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"TIMESTAMP_KEY\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\",\"internalType\":\"bytes32\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"USER_DATA_KEY\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\",\"internalType\":\"bytes32\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"certManager\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"address\",\"internalType\":\"contractICertManager\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"decodeAttestationTbs\",\"inputs\":[{\"name\":\"attestation\",\"type\":\"bytes\",\"internalType\":\"bytes\"}],\"outputs\":[{\"name\":\"attestationTbs\",\"type\":\"bytes\",\"internalType\":\"bytes\"},{\"name\":\"signature\",\"type\":\"bytes\",\"internalType\":\"bytes\"}],\"stateMutability\":\"pure\"},{\"type\":\"function\",\"name\":\"deregisterPCR0\",\"inputs\":[{\"name\":\"pcr0\",\"type\":\"bytes\",\"internalType\":\"bytes\"}],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"deregisterSigner\",\"inputs\":[{\"name\":\"signer\",\"type\":\"address\",\"internalType\":\"address\"}],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"initialize\",\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\",\"internalType\":\"address\"}],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"owner\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"address\",\"internalType\":\"address\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"proposer\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"address\",\"internalType\":\"address\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"registerPCR0\",\"inputs\":[{\"name\":\"pcr0\",\"type\":\"bytes\",\"internalType\":\"bytes\"}],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"registerSigner\",\"inputs\":[{\"name\":\"attestationTbs\",\"type\":\"bytes\",\"internalType\":\"bytes\"},{\"name\":\"signature\",\"type\":\"bytes\",\"internalType\":\"bytes\"}],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"renounceOwnership\",\"inputs\":[],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"setProposer\",\"inputs\":[{\"name\":\"_proposer\",\"type\":\"address\",\"internalType\":\"address\"}],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"transferOwnership\",\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\",\"internalType\":\"address\"}],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"validPCR0s\",\"inputs\":[{\"name\":\"\",\"type\":\"bytes32\",\"internalType\":\"bytes32\"}],\"outputs\":[{\"name\":\"\",\"type\":\"bool\",\"internalType\":\"bool\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"validSigners\",\"inputs\":[{\"name\":\"\",\"type\":\"address\",\"internalType\":\"address\"}],\"outputs\":[{\"name\":\"\",\"type\":\"bool\",\"internalType\":\"bool\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"validateAttestation\",\"inputs\":[{\"name\":\"attestationTbs\",\"type\":\"bytes\",\"internalType\":\"bytes\"},{\"name\":\"signature\",\"type\":\"bytes\",\"internalType\":\"bytes\"}],\"outputs\":[{\"name\":\"\",\"type\":\"tuple\",\"internalType\":\"structNitroValidator.Ptrs\",\"components\":[{\"name\":\"moduleID\",\"type\":\"uint256\",\"internalType\":\"CborElement\"},{\"name\":\"timestamp\",\"type\":\"uint64\",\"internalType\":\"uint64\"},{\"name\":\"digest\",\"type\":\"uint256\",\"internalType\":\"CborElement\"},{\"name\":\"pcrs\",\"type\":\"uint256[]\",\"internalType\":\"CborElement[]\"},{\"name\":\"cert\",\"type\":\"uint256\",\"internalType\":\"CborElement\"},{\"name\":\"cabundle\",\"type\":\"uint256[]\",\"internalType\":\"CborElement[]\"},{\"name\":\"publicKey\",\"type\":\"uint256\",\"internalType\":\"CborElement\"},{\"name\":\"userData\",\"type\":\"uint256\",\"internalType\":\"CborElement\"},{\"name\":\"nonce\",\"type\":\"uint256\",\"internalType\":\"CborElement\"}]}],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"version\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"string\",\"internalType\":\"string\"}],\"stateMutability\":\"pure\"},{\"type\":\"event\",\"name\":\"Initialized\",\"inputs\":[{\"name\":\"version\",\"type\":\"uint8\",\"indexed\":false,\"internalType\":\"uint8\"}],\"anonymous\":false},{\"type\":\"event\",\"name\":\"OwnershipTransferred\",\"inputs\":[{\"name\":\"previousOwner\",\"type\":\"address\",\"indexed\":true,\"internalType\":\"address\"},{\"name\":\"newOwner\",\"type\":\"address\",\"indexed\":true,\"internalType\":\"address\"}],\"anonymous\":false}]",
	Bin: "",
}

// SystemConfigGlobalABI is the input ABI used to generate the binding from.
// Deprecated: Use SystemConfigGlobalMetaData.ABI instead.
var SystemConfigGlobalABI = SystemConfigGlobalMetaData.ABI

// SystemConfigGlobalBin is the compiled bytecode used for deploying new contracts.
// Deprecated: Use SystemConfigGlobalMetaData.Bin instead.
var SystemConfigGlobalBin = SystemConfigGlobalMetaData.Bin

// DeploySystemConfigGlobal deploys a new Ethereum contract, binding an instance of SystemConfigGlobal to it.
func DeploySystemConfigGlobal(auth *bind.TransactOpts, backend bind.ContractBackend, certManager common.Address) (common.Address, *types.Transaction, *SystemConfigGlobal, error) {
	parsed, err := SystemConfigGlobalMetaData.GetAbi()
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	if parsed == nil {
		return common.Address{}, nil, nil, errors.New("GetABI returned nil")
	}

	address, tx, contract, err := bind.DeployContract(auth, *parsed, common.FromHex(SystemConfigGlobalBin), backend, certManager)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &SystemConfigGlobal{SystemConfigGlobalCaller: SystemConfigGlobalCaller{contract: contract}, SystemConfigGlobalTransactor: SystemConfigGlobalTransactor{contract: contract}, SystemConfigGlobalFilterer: SystemConfigGlobalFilterer{contract: contract}}, nil
}

// SystemConfigGlobal is an auto generated Go binding around an Ethereum contract.
type SystemConfigGlobal struct {
	SystemConfigGlobalCaller     // Read-only binding to the contract
	SystemConfigGlobalTransactor // Write-only binding to the contract
	SystemConfigGlobalFilterer   // Log filterer for contract events
}

// SystemConfigGlobalCaller is an auto generated read-only Go binding around an Ethereum contract.
type SystemConfigGlobalCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// SystemConfigGlobalTransactor is an auto generated write-only Go binding around an Ethereum contract.
type SystemConfigGlobalTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// SystemConfigGlobalFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type SystemConfigGlobalFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// SystemConfigGlobalSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type SystemConfigGlobalSession struct {
	Contract     *SystemConfigGlobal // Generic contract binding to set the session for
	CallOpts     bind.CallOpts       // Call options to use throughout this session
	TransactOpts bind.TransactOpts   // Transaction auth options to use throughout this session
}

// SystemConfigGlobalCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type SystemConfigGlobalCallerSession struct {
	Contract *SystemConfigGlobalCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts             // Call options to use throughout this session
}

// SystemConfigGlobalTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type SystemConfigGlobalTransactorSession struct {
	Contract     *SystemConfigGlobalTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts             // Transaction auth options to use throughout this session
}

// SystemConfigGlobalRaw is an auto generated low-level Go binding around an Ethereum contract.
type SystemConfigGlobalRaw struct {
	Contract *SystemConfigGlobal // Generic contract binding to access the raw methods on
}

// SystemConfigGlobalCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type SystemConfigGlobalCallerRaw struct {
	Contract *SystemConfigGlobalCaller // Generic read-only contract binding to access the raw methods on
}

// SystemConfigGlobalTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type SystemConfigGlobalTransactorRaw struct {
	Contract *SystemConfigGlobalTransactor // Generic write-only contract binding to access the raw methods on
}

// NewSystemConfigGlobal creates a new instance of SystemConfigGlobal, bound to a specific deployed contract.
func NewSystemConfigGlobal(address common.Address, backend bind.ContractBackend) (*SystemConfigGlobal, error) {
	contract, err := bindSystemConfigGlobal(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &SystemConfigGlobal{SystemConfigGlobalCaller: SystemConfigGlobalCaller{contract: contract}, SystemConfigGlobalTransactor: SystemConfigGlobalTransactor{contract: contract}, SystemConfigGlobalFilterer: SystemConfigGlobalFilterer{contract: contract}}, nil
}

// NewSystemConfigGlobalCaller creates a new read-only instance of SystemConfigGlobal, bound to a specific deployed contract.
func NewSystemConfigGlobalCaller(address common.Address, caller bind.ContractCaller) (*SystemConfigGlobalCaller, error) {
	contract, err := bindSystemConfigGlobal(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &SystemConfigGlobalCaller{contract: contract}, nil
}

// NewSystemConfigGlobalTransactor creates a new write-only instance of SystemConfigGlobal, bound to a specific deployed contract.
func NewSystemConfigGlobalTransactor(address common.Address, transactor bind.ContractTransactor) (*SystemConfigGlobalTransactor, error) {
	contract, err := bindSystemConfigGlobal(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &SystemConfigGlobalTransactor{contract: contract}, nil
}

// NewSystemConfigGlobalFilterer creates a new log filterer instance of SystemConfigGlobal, bound to a specific deployed contract.
func NewSystemConfigGlobalFilterer(address common.Address, filterer bind.ContractFilterer) (*SystemConfigGlobalFilterer, error) {
	contract, err := bindSystemConfigGlobal(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &SystemConfigGlobalFilterer{contract: contract}, nil
}

// bindSystemConfigGlobal binds a generic wrapper to an already deployed contract.
func bindSystemConfigGlobal(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := SystemConfigGlobalMetaData.GetAbi()
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, *parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_SystemConfigGlobal *SystemConfigGlobalRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _SystemConfigGlobal.Contract.SystemConfigGlobalCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_SystemConfigGlobal *SystemConfigGlobalRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _SystemConfigGlobal.Contract.SystemConfigGlobalTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_SystemConfigGlobal *SystemConfigGlobalRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _SystemConfigGlobal.Contract.SystemConfigGlobalTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_SystemConfigGlobal *SystemConfigGlobalCallerRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _SystemConfigGlobal.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_SystemConfigGlobal *SystemConfigGlobalTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _SystemConfigGlobal.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_SystemConfigGlobal *SystemConfigGlobalTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _SystemConfigGlobal.Contract.contract.Transact(opts, method, params...)
}

// ATTESTATIONDIGEST is a free data retrieval call binding the contract method 0x3893af6d.
//
// Solidity: function ATTESTATION_DIGEST() view returns(bytes32)
func (_SystemConfigGlobal *SystemConfigGlobalCaller) ATTESTATIONDIGEST(opts *bind.CallOpts) ([32]byte, error) {
	var out []interface{}
	err := _SystemConfigGlobal.contract.Call(opts, &out, "ATTESTATION_DIGEST")

	if err != nil {
		return *new([32]byte), err
	}

	out0 := *abi.ConvertType(out[0], new([32]byte)).(*[32]byte)

	return out0, err

}

// ATTESTATIONDIGEST is a free data retrieval call binding the contract method 0x3893af6d.
//
// Solidity: function ATTESTATION_DIGEST() view returns(bytes32)
func (_SystemConfigGlobal *SystemConfigGlobalSession) ATTESTATIONDIGEST() ([32]byte, error) {
	return _SystemConfigGlobal.Contract.ATTESTATIONDIGEST(&_SystemConfigGlobal.CallOpts)
}

// ATTESTATIONDIGEST is a free data retrieval call binding the contract method 0x3893af6d.
//
// Solidity: function ATTESTATION_DIGEST() view returns(bytes32)
func (_SystemConfigGlobal *SystemConfigGlobalCallerSession) ATTESTATIONDIGEST() ([32]byte, error) {
	return _SystemConfigGlobal.Contract.ATTESTATIONDIGEST(&_SystemConfigGlobal.CallOpts)
}

// ATTESTATIONTBSPREFIX is a free data retrieval call binding the contract method 0x2d4bad8a.
//
// Solidity: function ATTESTATION_TBS_PREFIX() view returns(bytes32)
func (_SystemConfigGlobal *SystemConfigGlobalCaller) ATTESTATIONTBSPREFIX(opts *bind.CallOpts) ([32]byte, error) {
	var out []interface{}
	err := _SystemConfigGlobal.contract.Call(opts, &out, "ATTESTATION_TBS_PREFIX")

	if err != nil {
		return *new([32]byte), err
	}

	out0 := *abi.ConvertType(out[0], new([32]byte)).(*[32]byte)

	return out0, err

}

// ATTESTATIONTBSPREFIX is a free data retrieval call binding the contract method 0x2d4bad8a.
//
// Solidity: function ATTESTATION_TBS_PREFIX() view returns(bytes32)
func (_SystemConfigGlobal *SystemConfigGlobalSession) ATTESTATIONTBSPREFIX() ([32]byte, error) {
	return _SystemConfigGlobal.Contract.ATTESTATIONTBSPREFIX(&_SystemConfigGlobal.CallOpts)
}

// ATTESTATIONTBSPREFIX is a free data retrieval call binding the contract method 0x2d4bad8a.
//
// Solidity: function ATTESTATION_TBS_PREFIX() view returns(bytes32)
func (_SystemConfigGlobal *SystemConfigGlobalCallerSession) ATTESTATIONTBSPREFIX() ([32]byte, error) {
	return _SystemConfigGlobal.Contract.ATTESTATIONTBSPREFIX(&_SystemConfigGlobal.CallOpts)
}

// CABUNDLEKEY is a free data retrieval call binding the contract method 0x9cc3eb48.
//
// Solidity: function CABUNDLE_KEY() view returns(bytes32)
func (_SystemConfigGlobal *SystemConfigGlobalCaller) CABUNDLEKEY(opts *bind.CallOpts) ([32]byte, error) {
	var out []interface{}
	err := _SystemConfigGlobal.contract.Call(opts, &out, "CABUNDLE_KEY")

	if err != nil {
		return *new([32]byte), err
	}

	out0 := *abi.ConvertType(out[0], new([32]byte)).(*[32]byte)

	return out0, err

}

// CABUNDLEKEY is a free data retrieval call binding the contract method 0x9cc3eb48.
//
// Solidity: function CABUNDLE_KEY() view returns(bytes32)
func (_SystemConfigGlobal *SystemConfigGlobalSession) CABUNDLEKEY() ([32]byte, error) {
	return _SystemConfigGlobal.Contract.CABUNDLEKEY(&_SystemConfigGlobal.CallOpts)
}

// CABUNDLEKEY is a free data retrieval call binding the contract method 0x9cc3eb48.
//
// Solidity: function CABUNDLE_KEY() view returns(bytes32)
func (_SystemConfigGlobal *SystemConfigGlobalCallerSession) CABUNDLEKEY() ([32]byte, error) {
	return _SystemConfigGlobal.Contract.CABUNDLEKEY(&_SystemConfigGlobal.CallOpts)
}

// CERTIFICATEKEY is a free data retrieval call binding the contract method 0xae951149.
//
// Solidity: function CERTIFICATE_KEY() view returns(bytes32)
func (_SystemConfigGlobal *SystemConfigGlobalCaller) CERTIFICATEKEY(opts *bind.CallOpts) ([32]byte, error) {
	var out []interface{}
	err := _SystemConfigGlobal.contract.Call(opts, &out, "CERTIFICATE_KEY")

	if err != nil {
		return *new([32]byte), err
	}

	out0 := *abi.ConvertType(out[0], new([32]byte)).(*[32]byte)

	return out0, err

}

// CERTIFICATEKEY is a free data retrieval call binding the contract method 0xae951149.
//
// Solidity: function CERTIFICATE_KEY() view returns(bytes32)
func (_SystemConfigGlobal *SystemConfigGlobalSession) CERTIFICATEKEY() ([32]byte, error) {
	return _SystemConfigGlobal.Contract.CERTIFICATEKEY(&_SystemConfigGlobal.CallOpts)
}

// CERTIFICATEKEY is a free data retrieval call binding the contract method 0xae951149.
//
// Solidity: function CERTIFICATE_KEY() view returns(bytes32)
func (_SystemConfigGlobal *SystemConfigGlobalCallerSession) CERTIFICATEKEY() ([32]byte, error) {
	return _SystemConfigGlobal.Contract.CERTIFICATEKEY(&_SystemConfigGlobal.CallOpts)
}

// DIGESTKEY is a free data retrieval call binding the contract method 0x6be1e68b.
//
// Solidity: function DIGEST_KEY() view returns(bytes32)
func (_SystemConfigGlobal *SystemConfigGlobalCaller) DIGESTKEY(opts *bind.CallOpts) ([32]byte, error) {
	var out []interface{}
	err := _SystemConfigGlobal.contract.Call(opts, &out, "DIGEST_KEY")

	if err != nil {
		return *new([32]byte), err
	}

	out0 := *abi.ConvertType(out[0], new([32]byte)).(*[32]byte)

	return out0, err

}

// DIGESTKEY is a free data retrieval call binding the contract method 0x6be1e68b.
//
// Solidity: function DIGEST_KEY() view returns(bytes32)
func (_SystemConfigGlobal *SystemConfigGlobalSession) DIGESTKEY() ([32]byte, error) {
	return _SystemConfigGlobal.Contract.DIGESTKEY(&_SystemConfigGlobal.CallOpts)
}

// DIGESTKEY is a free data retrieval call binding the contract method 0x6be1e68b.
//
// Solidity: function DIGEST_KEY() view returns(bytes32)
func (_SystemConfigGlobal *SystemConfigGlobalCallerSession) DIGESTKEY() ([32]byte, error) {
	return _SystemConfigGlobal.Contract.DIGESTKEY(&_SystemConfigGlobal.CallOpts)
}

// MAXAGE is a free data retrieval call binding the contract method 0x0dcaeaf2.
//
// Solidity: function MAX_AGE() view returns(uint256)
func (_SystemConfigGlobal *SystemConfigGlobalCaller) MAXAGE(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _SystemConfigGlobal.contract.Call(opts, &out, "MAX_AGE")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// MAXAGE is a free data retrieval call binding the contract method 0x0dcaeaf2.
//
// Solidity: function MAX_AGE() view returns(uint256)
func (_SystemConfigGlobal *SystemConfigGlobalSession) MAXAGE() (*big.Int, error) {
	return _SystemConfigGlobal.Contract.MAXAGE(&_SystemConfigGlobal.CallOpts)
}

// MAXAGE is a free data retrieval call binding the contract method 0x0dcaeaf2.
//
// Solidity: function MAX_AGE() view returns(uint256)
func (_SystemConfigGlobal *SystemConfigGlobalCallerSession) MAXAGE() (*big.Int, error) {
	return _SystemConfigGlobal.Contract.MAXAGE(&_SystemConfigGlobal.CallOpts)
}

// MODULEIDKEY is a free data retrieval call binding the contract method 0x9adb2d68.
//
// Solidity: function MODULE_ID_KEY() view returns(bytes32)
func (_SystemConfigGlobal *SystemConfigGlobalCaller) MODULEIDKEY(opts *bind.CallOpts) ([32]byte, error) {
	var out []interface{}
	err := _SystemConfigGlobal.contract.Call(opts, &out, "MODULE_ID_KEY")

	if err != nil {
		return *new([32]byte), err
	}

	out0 := *abi.ConvertType(out[0], new([32]byte)).(*[32]byte)

	return out0, err

}

// MODULEIDKEY is a free data retrieval call binding the contract method 0x9adb2d68.
//
// Solidity: function MODULE_ID_KEY() view returns(bytes32)
func (_SystemConfigGlobal *SystemConfigGlobalSession) MODULEIDKEY() ([32]byte, error) {
	return _SystemConfigGlobal.Contract.MODULEIDKEY(&_SystemConfigGlobal.CallOpts)
}

// MODULEIDKEY is a free data retrieval call binding the contract method 0x9adb2d68.
//
// Solidity: function MODULE_ID_KEY() view returns(bytes32)
func (_SystemConfigGlobal *SystemConfigGlobalCallerSession) MODULEIDKEY() ([32]byte, error) {
	return _SystemConfigGlobal.Contract.MODULEIDKEY(&_SystemConfigGlobal.CallOpts)
}

// NONCEKEY is a free data retrieval call binding the contract method 0x6378aad5.
//
// Solidity: function NONCE_KEY() view returns(bytes32)
func (_SystemConfigGlobal *SystemConfigGlobalCaller) NONCEKEY(opts *bind.CallOpts) ([32]byte, error) {
	var out []interface{}
	err := _SystemConfigGlobal.contract.Call(opts, &out, "NONCE_KEY")

	if err != nil {
		return *new([32]byte), err
	}

	out0 := *abi.ConvertType(out[0], new([32]byte)).(*[32]byte)

	return out0, err

}

// NONCEKEY is a free data retrieval call binding the contract method 0x6378aad5.
//
// Solidity: function NONCE_KEY() view returns(bytes32)
func (_SystemConfigGlobal *SystemConfigGlobalSession) NONCEKEY() ([32]byte, error) {
	return _SystemConfigGlobal.Contract.NONCEKEY(&_SystemConfigGlobal.CallOpts)
}

// NONCEKEY is a free data retrieval call binding the contract method 0x6378aad5.
//
// Solidity: function NONCE_KEY() view returns(bytes32)
func (_SystemConfigGlobal *SystemConfigGlobalCallerSession) NONCEKEY() ([32]byte, error) {
	return _SystemConfigGlobal.Contract.NONCEKEY(&_SystemConfigGlobal.CallOpts)
}

// PCRSKEY is a free data retrieval call binding the contract method 0xb22bed7e.
//
// Solidity: function PCRS_KEY() view returns(bytes32)
func (_SystemConfigGlobal *SystemConfigGlobalCaller) PCRSKEY(opts *bind.CallOpts) ([32]byte, error) {
	var out []interface{}
	err := _SystemConfigGlobal.contract.Call(opts, &out, "PCRS_KEY")

	if err != nil {
		return *new([32]byte), err
	}

	out0 := *abi.ConvertType(out[0], new([32]byte)).(*[32]byte)

	return out0, err

}

// PCRSKEY is a free data retrieval call binding the contract method 0xb22bed7e.
//
// Solidity: function PCRS_KEY() view returns(bytes32)
func (_SystemConfigGlobal *SystemConfigGlobalSession) PCRSKEY() ([32]byte, error) {
	return _SystemConfigGlobal.Contract.PCRSKEY(&_SystemConfigGlobal.CallOpts)
}

// PCRSKEY is a free data retrieval call binding the contract method 0xb22bed7e.
//
// Solidity: function PCRS_KEY() view returns(bytes32)
func (_SystemConfigGlobal *SystemConfigGlobalCallerSession) PCRSKEY() ([32]byte, error) {
	return _SystemConfigGlobal.Contract.PCRSKEY(&_SystemConfigGlobal.CallOpts)
}

// PUBLICKEYKEY is a free data retrieval call binding the contract method 0xe8b6d3fe.
//
// Solidity: function PUBLIC_KEY_KEY() view returns(bytes32)
func (_SystemConfigGlobal *SystemConfigGlobalCaller) PUBLICKEYKEY(opts *bind.CallOpts) ([32]byte, error) {
	var out []interface{}
	err := _SystemConfigGlobal.contract.Call(opts, &out, "PUBLIC_KEY_KEY")

	if err != nil {
		return *new([32]byte), err
	}

	out0 := *abi.ConvertType(out[0], new([32]byte)).(*[32]byte)

	return out0, err

}

// PUBLICKEYKEY is a free data retrieval call binding the contract method 0xe8b6d3fe.
//
// Solidity: function PUBLIC_KEY_KEY() view returns(bytes32)
func (_SystemConfigGlobal *SystemConfigGlobalSession) PUBLICKEYKEY() ([32]byte, error) {
	return _SystemConfigGlobal.Contract.PUBLICKEYKEY(&_SystemConfigGlobal.CallOpts)
}

// PUBLICKEYKEY is a free data retrieval call binding the contract method 0xe8b6d3fe.
//
// Solidity: function PUBLIC_KEY_KEY() view returns(bytes32)
func (_SystemConfigGlobal *SystemConfigGlobalCallerSession) PUBLICKEYKEY() ([32]byte, error) {
	return _SystemConfigGlobal.Contract.PUBLICKEYKEY(&_SystemConfigGlobal.CallOpts)
}

// TIMESTAMPKEY is a free data retrieval call binding the contract method 0xe0a655ff.
//
// Solidity: function TIMESTAMP_KEY() view returns(bytes32)
func (_SystemConfigGlobal *SystemConfigGlobalCaller) TIMESTAMPKEY(opts *bind.CallOpts) ([32]byte, error) {
	var out []interface{}
	err := _SystemConfigGlobal.contract.Call(opts, &out, "TIMESTAMP_KEY")

	if err != nil {
		return *new([32]byte), err
	}

	out0 := *abi.ConvertType(out[0], new([32]byte)).(*[32]byte)

	return out0, err

}

// TIMESTAMPKEY is a free data retrieval call binding the contract method 0xe0a655ff.
//
// Solidity: function TIMESTAMP_KEY() view returns(bytes32)
func (_SystemConfigGlobal *SystemConfigGlobalSession) TIMESTAMPKEY() ([32]byte, error) {
	return _SystemConfigGlobal.Contract.TIMESTAMPKEY(&_SystemConfigGlobal.CallOpts)
}

// TIMESTAMPKEY is a free data retrieval call binding the contract method 0xe0a655ff.
//
// Solidity: function TIMESTAMP_KEY() view returns(bytes32)
func (_SystemConfigGlobal *SystemConfigGlobalCallerSession) TIMESTAMPKEY() ([32]byte, error) {
	return _SystemConfigGlobal.Contract.TIMESTAMPKEY(&_SystemConfigGlobal.CallOpts)
}

// USERDATAKEY is a free data retrieval call binding the contract method 0xcebf08d7.
//
// Solidity: function USER_DATA_KEY() view returns(bytes32)
func (_SystemConfigGlobal *SystemConfigGlobalCaller) USERDATAKEY(opts *bind.CallOpts) ([32]byte, error) {
	var out []interface{}
	err := _SystemConfigGlobal.contract.Call(opts, &out, "USER_DATA_KEY")

	if err != nil {
		return *new([32]byte), err
	}

	out0 := *abi.ConvertType(out[0], new([32]byte)).(*[32]byte)

	return out0, err

}

// USERDATAKEY is a free data retrieval call binding the contract method 0xcebf08d7.
//
// Solidity: function USER_DATA_KEY() view returns(bytes32)
func (_SystemConfigGlobal *SystemConfigGlobalSession) USERDATAKEY() ([32]byte, error) {
	return _SystemConfigGlobal.Contract.USERDATAKEY(&_SystemConfigGlobal.CallOpts)
}

// USERDATAKEY is a free data retrieval call binding the contract method 0xcebf08d7.
//
// Solidity: function USER_DATA_KEY() view returns(bytes32)
func (_SystemConfigGlobal *SystemConfigGlobalCallerSession) USERDATAKEY() ([32]byte, error) {
	return _SystemConfigGlobal.Contract.USERDATAKEY(&_SystemConfigGlobal.CallOpts)
}

// CertManager is a free data retrieval call binding the contract method 0x739e8484.
//
// Solidity: function certManager() view returns(address)
func (_SystemConfigGlobal *SystemConfigGlobalCaller) CertManager(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _SystemConfigGlobal.contract.Call(opts, &out, "certManager")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// CertManager is a free data retrieval call binding the contract method 0x739e8484.
//
// Solidity: function certManager() view returns(address)
func (_SystemConfigGlobal *SystemConfigGlobalSession) CertManager() (common.Address, error) {
	return _SystemConfigGlobal.Contract.CertManager(&_SystemConfigGlobal.CallOpts)
}

// CertManager is a free data retrieval call binding the contract method 0x739e8484.
//
// Solidity: function certManager() view returns(address)
func (_SystemConfigGlobal *SystemConfigGlobalCallerSession) CertManager() (common.Address, error) {
	return _SystemConfigGlobal.Contract.CertManager(&_SystemConfigGlobal.CallOpts)
}

// DecodeAttestationTbs is a free data retrieval call binding the contract method 0xa903a277.
//
// Solidity: function decodeAttestationTbs(bytes attestation) pure returns(bytes attestationTbs, bytes signature)
func (_SystemConfigGlobal *SystemConfigGlobalCaller) DecodeAttestationTbs(opts *bind.CallOpts, attestation []byte) (struct {
	AttestationTbs []byte
	Signature      []byte
}, error) {
	var out []interface{}
	err := _SystemConfigGlobal.contract.Call(opts, &out, "decodeAttestationTbs", attestation)

	outstruct := new(struct {
		AttestationTbs []byte
		Signature      []byte
	})
	if err != nil {
		return *outstruct, err
	}

	outstruct.AttestationTbs = *abi.ConvertType(out[0], new([]byte)).(*[]byte)
	outstruct.Signature = *abi.ConvertType(out[1], new([]byte)).(*[]byte)

	return *outstruct, err

}

// DecodeAttestationTbs is a free data retrieval call binding the contract method 0xa903a277.
//
// Solidity: function decodeAttestationTbs(bytes attestation) pure returns(bytes attestationTbs, bytes signature)
func (_SystemConfigGlobal *SystemConfigGlobalSession) DecodeAttestationTbs(attestation []byte) (struct {
	AttestationTbs []byte
	Signature      []byte
}, error) {
	return _SystemConfigGlobal.Contract.DecodeAttestationTbs(&_SystemConfigGlobal.CallOpts, attestation)
}

// DecodeAttestationTbs is a free data retrieval call binding the contract method 0xa903a277.
//
// Solidity: function decodeAttestationTbs(bytes attestation) pure returns(bytes attestationTbs, bytes signature)
func (_SystemConfigGlobal *SystemConfigGlobalCallerSession) DecodeAttestationTbs(attestation []byte) (struct {
	AttestationTbs []byte
	Signature      []byte
}, error) {
	return _SystemConfigGlobal.Contract.DecodeAttestationTbs(&_SystemConfigGlobal.CallOpts, attestation)
}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() view returns(address)
func (_SystemConfigGlobal *SystemConfigGlobalCaller) Owner(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _SystemConfigGlobal.contract.Call(opts, &out, "owner")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() view returns(address)
func (_SystemConfigGlobal *SystemConfigGlobalSession) Owner() (common.Address, error) {
	return _SystemConfigGlobal.Contract.Owner(&_SystemConfigGlobal.CallOpts)
}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() view returns(address)
func (_SystemConfigGlobal *SystemConfigGlobalCallerSession) Owner() (common.Address, error) {
	return _SystemConfigGlobal.Contract.Owner(&_SystemConfigGlobal.CallOpts)
}

// Proposer is a free data retrieval call binding the contract method 0xa8e4fb90.
//
// Solidity: function proposer() view returns(address)
func (_SystemConfigGlobal *SystemConfigGlobalCaller) Proposer(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _SystemConfigGlobal.contract.Call(opts, &out, "proposer")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// Proposer is a free data retrieval call binding the contract method 0xa8e4fb90.
//
// Solidity: function proposer() view returns(address)
func (_SystemConfigGlobal *SystemConfigGlobalSession) Proposer() (common.Address, error) {
	return _SystemConfigGlobal.Contract.Proposer(&_SystemConfigGlobal.CallOpts)
}

// Proposer is a free data retrieval call binding the contract method 0xa8e4fb90.
//
// Solidity: function proposer() view returns(address)
func (_SystemConfigGlobal *SystemConfigGlobalCallerSession) Proposer() (common.Address, error) {
	return _SystemConfigGlobal.Contract.Proposer(&_SystemConfigGlobal.CallOpts)
}

// ValidPCR0s is a free data retrieval call binding the contract method 0x295840d9.
//
// Solidity: function validPCR0s(bytes32 ) view returns(bool)
func (_SystemConfigGlobal *SystemConfigGlobalCaller) ValidPCR0s(opts *bind.CallOpts, arg0 [32]byte) (bool, error) {
	var out []interface{}
	err := _SystemConfigGlobal.contract.Call(opts, &out, "validPCR0s", arg0)

	if err != nil {
		return *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new(bool)).(*bool)

	return out0, err

}

// ValidPCR0s is a free data retrieval call binding the contract method 0x295840d9.
//
// Solidity: function validPCR0s(bytes32 ) view returns(bool)
func (_SystemConfigGlobal *SystemConfigGlobalSession) ValidPCR0s(arg0 [32]byte) (bool, error) {
	return _SystemConfigGlobal.Contract.ValidPCR0s(&_SystemConfigGlobal.CallOpts, arg0)
}

// ValidPCR0s is a free data retrieval call binding the contract method 0x295840d9.
//
// Solidity: function validPCR0s(bytes32 ) view returns(bool)
func (_SystemConfigGlobal *SystemConfigGlobalCallerSession) ValidPCR0s(arg0 [32]byte) (bool, error) {
	return _SystemConfigGlobal.Contract.ValidPCR0s(&_SystemConfigGlobal.CallOpts, arg0)
}

// ValidSigners is a free data retrieval call binding the contract method 0x6a73b00b.
//
// Solidity: function validSigners(address ) view returns(bool)
func (_SystemConfigGlobal *SystemConfigGlobalCaller) ValidSigners(opts *bind.CallOpts, arg0 common.Address) (bool, error) {
	var out []interface{}
	err := _SystemConfigGlobal.contract.Call(opts, &out, "validSigners", arg0)

	if err != nil {
		return *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new(bool)).(*bool)

	return out0, err

}

// ValidSigners is a free data retrieval call binding the contract method 0x6a73b00b.
//
// Solidity: function validSigners(address ) view returns(bool)
func (_SystemConfigGlobal *SystemConfigGlobalSession) ValidSigners(arg0 common.Address) (bool, error) {
	return _SystemConfigGlobal.Contract.ValidSigners(&_SystemConfigGlobal.CallOpts, arg0)
}

// ValidSigners is a free data retrieval call binding the contract method 0x6a73b00b.
//
// Solidity: function validSigners(address ) view returns(bool)
func (_SystemConfigGlobal *SystemConfigGlobalCallerSession) ValidSigners(arg0 common.Address) (bool, error) {
	return _SystemConfigGlobal.Contract.ValidSigners(&_SystemConfigGlobal.CallOpts, arg0)
}

// Version is a free data retrieval call binding the contract method 0x54fd4d50.
//
// Solidity: function version() pure returns(string)
func (_SystemConfigGlobal *SystemConfigGlobalCaller) Version(opts *bind.CallOpts) (string, error) {
	var out []interface{}
	err := _SystemConfigGlobal.contract.Call(opts, &out, "version")

	if err != nil {
		return *new(string), err
	}

	out0 := *abi.ConvertType(out[0], new(string)).(*string)

	return out0, err

}

// Version is a free data retrieval call binding the contract method 0x54fd4d50.
//
// Solidity: function version() pure returns(string)
func (_SystemConfigGlobal *SystemConfigGlobalSession) Version() (string, error) {
	return _SystemConfigGlobal.Contract.Version(&_SystemConfigGlobal.CallOpts)
}

// Version is a free data retrieval call binding the contract method 0x54fd4d50.
//
// Solidity: function version() pure returns(string)
func (_SystemConfigGlobal *SystemConfigGlobalCallerSession) Version() (string, error) {
	return _SystemConfigGlobal.Contract.Version(&_SystemConfigGlobal.CallOpts)
}

// DeregisterPCR0 is a paid mutator transaction binding the contract method 0x50697a3f.
//
// Solidity: function deregisterPCR0(bytes pcr0) returns()
func (_SystemConfigGlobal *SystemConfigGlobalTransactor) DeregisterPCR0(opts *bind.TransactOpts, pcr0 []byte) (*types.Transaction, error) {
	return _SystemConfigGlobal.contract.Transact(opts, "deregisterPCR0", pcr0)
}

// DeregisterPCR0 is a paid mutator transaction binding the contract method 0x50697a3f.
//
// Solidity: function deregisterPCR0(bytes pcr0) returns()
func (_SystemConfigGlobal *SystemConfigGlobalSession) DeregisterPCR0(pcr0 []byte) (*types.Transaction, error) {
	return _SystemConfigGlobal.Contract.DeregisterPCR0(&_SystemConfigGlobal.TransactOpts, pcr0)
}

// DeregisterPCR0 is a paid mutator transaction binding the contract method 0x50697a3f.
//
// Solidity: function deregisterPCR0(bytes pcr0) returns()
func (_SystemConfigGlobal *SystemConfigGlobalTransactorSession) DeregisterPCR0(pcr0 []byte) (*types.Transaction, error) {
	return _SystemConfigGlobal.Contract.DeregisterPCR0(&_SystemConfigGlobal.TransactOpts, pcr0)
}

// DeregisterSigner is a paid mutator transaction binding the contract method 0x0ba24fe0.
//
// Solidity: function deregisterSigner(address signer) returns()
func (_SystemConfigGlobal *SystemConfigGlobalTransactor) DeregisterSigner(opts *bind.TransactOpts, signer common.Address) (*types.Transaction, error) {
	return _SystemConfigGlobal.contract.Transact(opts, "deregisterSigner", signer)
}

// DeregisterSigner is a paid mutator transaction binding the contract method 0x0ba24fe0.
//
// Solidity: function deregisterSigner(address signer) returns()
func (_SystemConfigGlobal *SystemConfigGlobalSession) DeregisterSigner(signer common.Address) (*types.Transaction, error) {
	return _SystemConfigGlobal.Contract.DeregisterSigner(&_SystemConfigGlobal.TransactOpts, signer)
}

// DeregisterSigner is a paid mutator transaction binding the contract method 0x0ba24fe0.
//
// Solidity: function deregisterSigner(address signer) returns()
func (_SystemConfigGlobal *SystemConfigGlobalTransactorSession) DeregisterSigner(signer common.Address) (*types.Transaction, error) {
	return _SystemConfigGlobal.Contract.DeregisterSigner(&_SystemConfigGlobal.TransactOpts, signer)
}

// Initialize is a paid mutator transaction binding the contract method 0xc4d66de8.
//
// Solidity: function initialize(address _owner) returns()
func (_SystemConfigGlobal *SystemConfigGlobalTransactor) Initialize(opts *bind.TransactOpts, _owner common.Address) (*types.Transaction, error) {
	return _SystemConfigGlobal.contract.Transact(opts, "initialize", _owner)
}

// Initialize is a paid mutator transaction binding the contract method 0xc4d66de8.
//
// Solidity: function initialize(address _owner) returns()
func (_SystemConfigGlobal *SystemConfigGlobalSession) Initialize(_owner common.Address) (*types.Transaction, error) {
	return _SystemConfigGlobal.Contract.Initialize(&_SystemConfigGlobal.TransactOpts, _owner)
}

// Initialize is a paid mutator transaction binding the contract method 0xc4d66de8.
//
// Solidity: function initialize(address _owner) returns()
func (_SystemConfigGlobal *SystemConfigGlobalTransactorSession) Initialize(_owner common.Address) (*types.Transaction, error) {
	return _SystemConfigGlobal.Contract.Initialize(&_SystemConfigGlobal.TransactOpts, _owner)
}

// RegisterPCR0 is a paid mutator transaction binding the contract method 0x2c68fa02.
//
// Solidity: function registerPCR0(bytes pcr0) returns()
func (_SystemConfigGlobal *SystemConfigGlobalTransactor) RegisterPCR0(opts *bind.TransactOpts, pcr0 []byte) (*types.Transaction, error) {
	return _SystemConfigGlobal.contract.Transact(opts, "registerPCR0", pcr0)
}

// RegisterPCR0 is a paid mutator transaction binding the contract method 0x2c68fa02.
//
// Solidity: function registerPCR0(bytes pcr0) returns()
func (_SystemConfigGlobal *SystemConfigGlobalSession) RegisterPCR0(pcr0 []byte) (*types.Transaction, error) {
	return _SystemConfigGlobal.Contract.RegisterPCR0(&_SystemConfigGlobal.TransactOpts, pcr0)
}

// RegisterPCR0 is a paid mutator transaction binding the contract method 0x2c68fa02.
//
// Solidity: function registerPCR0(bytes pcr0) returns()
func (_SystemConfigGlobal *SystemConfigGlobalTransactorSession) RegisterPCR0(pcr0 []byte) (*types.Transaction, error) {
	return _SystemConfigGlobal.Contract.RegisterPCR0(&_SystemConfigGlobal.TransactOpts, pcr0)
}

// RegisterSigner is a paid mutator transaction binding the contract method 0xba58e82a.
//
// Solidity: function registerSigner(bytes attestationTbs, bytes signature) returns()
func (_SystemConfigGlobal *SystemConfigGlobalTransactor) RegisterSigner(opts *bind.TransactOpts, attestationTbs []byte, signature []byte) (*types.Transaction, error) {
	return _SystemConfigGlobal.contract.Transact(opts, "registerSigner", attestationTbs, signature)
}

// RegisterSigner is a paid mutator transaction binding the contract method 0xba58e82a.
//
// Solidity: function registerSigner(bytes attestationTbs, bytes signature) returns()
func (_SystemConfigGlobal *SystemConfigGlobalSession) RegisterSigner(attestationTbs []byte, signature []byte) (*types.Transaction, error) {
	return _SystemConfigGlobal.Contract.RegisterSigner(&_SystemConfigGlobal.TransactOpts, attestationTbs, signature)
}

// RegisterSigner is a paid mutator transaction binding the contract method 0xba58e82a.
//
// Solidity: function registerSigner(bytes attestationTbs, bytes signature) returns()
func (_SystemConfigGlobal *SystemConfigGlobalTransactorSession) RegisterSigner(attestationTbs []byte, signature []byte) (*types.Transaction, error) {
	return _SystemConfigGlobal.Contract.RegisterSigner(&_SystemConfigGlobal.TransactOpts, attestationTbs, signature)
}

// RenounceOwnership is a paid mutator transaction binding the contract method 0x715018a6.
//
// Solidity: function renounceOwnership() returns()
func (_SystemConfigGlobal *SystemConfigGlobalTransactor) RenounceOwnership(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _SystemConfigGlobal.contract.Transact(opts, "renounceOwnership")
}

// RenounceOwnership is a paid mutator transaction binding the contract method 0x715018a6.
//
// Solidity: function renounceOwnership() returns()
func (_SystemConfigGlobal *SystemConfigGlobalSession) RenounceOwnership() (*types.Transaction, error) {
	return _SystemConfigGlobal.Contract.RenounceOwnership(&_SystemConfigGlobal.TransactOpts)
}

// RenounceOwnership is a paid mutator transaction binding the contract method 0x715018a6.
//
// Solidity: function renounceOwnership() returns()
func (_SystemConfigGlobal *SystemConfigGlobalTransactorSession) RenounceOwnership() (*types.Transaction, error) {
	return _SystemConfigGlobal.Contract.RenounceOwnership(&_SystemConfigGlobal.TransactOpts)
}

// SetProposer is a paid mutator transaction binding the contract method 0x1fb4a228.
//
// Solidity: function setProposer(address _proposer) returns()
func (_SystemConfigGlobal *SystemConfigGlobalTransactor) SetProposer(opts *bind.TransactOpts, _proposer common.Address) (*types.Transaction, error) {
	return _SystemConfigGlobal.contract.Transact(opts, "setProposer", _proposer)
}

// SetProposer is a paid mutator transaction binding the contract method 0x1fb4a228.
//
// Solidity: function setProposer(address _proposer) returns()
func (_SystemConfigGlobal *SystemConfigGlobalSession) SetProposer(_proposer common.Address) (*types.Transaction, error) {
	return _SystemConfigGlobal.Contract.SetProposer(&_SystemConfigGlobal.TransactOpts, _proposer)
}

// SetProposer is a paid mutator transaction binding the contract method 0x1fb4a228.
//
// Solidity: function setProposer(address _proposer) returns()
func (_SystemConfigGlobal *SystemConfigGlobalTransactorSession) SetProposer(_proposer common.Address) (*types.Transaction, error) {
	return _SystemConfigGlobal.Contract.SetProposer(&_SystemConfigGlobal.TransactOpts, _proposer)
}

// TransferOwnership is a paid mutator transaction binding the contract method 0xf2fde38b.
//
// Solidity: function transferOwnership(address newOwner) returns()
func (_SystemConfigGlobal *SystemConfigGlobalTransactor) TransferOwnership(opts *bind.TransactOpts, newOwner common.Address) (*types.Transaction, error) {
	return _SystemConfigGlobal.contract.Transact(opts, "transferOwnership", newOwner)
}

// TransferOwnership is a paid mutator transaction binding the contract method 0xf2fde38b.
//
// Solidity: function transferOwnership(address newOwner) returns()
func (_SystemConfigGlobal *SystemConfigGlobalSession) TransferOwnership(newOwner common.Address) (*types.Transaction, error) {
	return _SystemConfigGlobal.Contract.TransferOwnership(&_SystemConfigGlobal.TransactOpts, newOwner)
}

// TransferOwnership is a paid mutator transaction binding the contract method 0xf2fde38b.
//
// Solidity: function transferOwnership(address newOwner) returns()
func (_SystemConfigGlobal *SystemConfigGlobalTransactorSession) TransferOwnership(newOwner common.Address) (*types.Transaction, error) {
	return _SystemConfigGlobal.Contract.TransferOwnership(&_SystemConfigGlobal.TransactOpts, newOwner)
}

// ValidateAttestation is a paid mutator transaction binding the contract method 0x05f7aead.
//
// Solidity: function validateAttestation(bytes attestationTbs, bytes signature) returns((uint256,uint64,uint256,uint256[],uint256,uint256[],uint256,uint256,uint256))
func (_SystemConfigGlobal *SystemConfigGlobalTransactor) ValidateAttestation(opts *bind.TransactOpts, attestationTbs []byte, signature []byte) (*types.Transaction, error) {
	return _SystemConfigGlobal.contract.Transact(opts, "validateAttestation", attestationTbs, signature)
}

// ValidateAttestation is a paid mutator transaction binding the contract method 0x05f7aead.
//
// Solidity: function validateAttestation(bytes attestationTbs, bytes signature) returns((uint256,uint64,uint256,uint256[],uint256,uint256[],uint256,uint256,uint256))
func (_SystemConfigGlobal *SystemConfigGlobalSession) ValidateAttestation(attestationTbs []byte, signature []byte) (*types.Transaction, error) {
	return _SystemConfigGlobal.Contract.ValidateAttestation(&_SystemConfigGlobal.TransactOpts, attestationTbs, signature)
}

// ValidateAttestation is a paid mutator transaction binding the contract method 0x05f7aead.
//
// Solidity: function validateAttestation(bytes attestationTbs, bytes signature) returns((uint256,uint64,uint256,uint256[],uint256,uint256[],uint256,uint256,uint256))
func (_SystemConfigGlobal *SystemConfigGlobalTransactorSession) ValidateAttestation(attestationTbs []byte, signature []byte) (*types.Transaction, error) {
	return _SystemConfigGlobal.Contract.ValidateAttestation(&_SystemConfigGlobal.TransactOpts, attestationTbs, signature)
}

// SystemConfigGlobalInitializedIterator is returned from FilterInitialized and is used to iterate over the raw logs and unpacked data for Initialized events raised by the SystemConfigGlobal contract.
type SystemConfigGlobalInitializedIterator struct {
	Event *SystemConfigGlobalInitialized // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *SystemConfigGlobalInitializedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(SystemConfigGlobalInitialized)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(SystemConfigGlobalInitialized)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *SystemConfigGlobalInitializedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *SystemConfigGlobalInitializedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// SystemConfigGlobalInitialized represents a Initialized event raised by the SystemConfigGlobal contract.
type SystemConfigGlobalInitialized struct {
	Version uint8
	Raw     types.Log // Blockchain specific contextual infos
}

// FilterInitialized is a free log retrieval operation binding the contract event 0x7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498.
//
// Solidity: event Initialized(uint8 version)
func (_SystemConfigGlobal *SystemConfigGlobalFilterer) FilterInitialized(opts *bind.FilterOpts) (*SystemConfigGlobalInitializedIterator, error) {

	logs, sub, err := _SystemConfigGlobal.contract.FilterLogs(opts, "Initialized")
	if err != nil {
		return nil, err
	}
	return &SystemConfigGlobalInitializedIterator{contract: _SystemConfigGlobal.contract, event: "Initialized", logs: logs, sub: sub}, nil
}

// WatchInitialized is a free log subscription operation binding the contract event 0x7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498.
//
// Solidity: event Initialized(uint8 version)
func (_SystemConfigGlobal *SystemConfigGlobalFilterer) WatchInitialized(opts *bind.WatchOpts, sink chan<- *SystemConfigGlobalInitialized) (event.Subscription, error) {

	logs, sub, err := _SystemConfigGlobal.contract.WatchLogs(opts, "Initialized")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(SystemConfigGlobalInitialized)
				if err := _SystemConfigGlobal.contract.UnpackLog(event, "Initialized", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseInitialized is a log parse operation binding the contract event 0x7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498.
//
// Solidity: event Initialized(uint8 version)
func (_SystemConfigGlobal *SystemConfigGlobalFilterer) ParseInitialized(log types.Log) (*SystemConfigGlobalInitialized, error) {
	event := new(SystemConfigGlobalInitialized)
	if err := _SystemConfigGlobal.contract.UnpackLog(event, "Initialized", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// SystemConfigGlobalOwnershipTransferredIterator is returned from FilterOwnershipTransferred and is used to iterate over the raw logs and unpacked data for OwnershipTransferred events raised by the SystemConfigGlobal contract.
type SystemConfigGlobalOwnershipTransferredIterator struct {
	Event *SystemConfigGlobalOwnershipTransferred // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *SystemConfigGlobalOwnershipTransferredIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(SystemConfigGlobalOwnershipTransferred)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(SystemConfigGlobalOwnershipTransferred)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *SystemConfigGlobalOwnershipTransferredIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *SystemConfigGlobalOwnershipTransferredIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// SystemConfigGlobalOwnershipTransferred represents a OwnershipTransferred event raised by the SystemConfigGlobal contract.
type SystemConfigGlobalOwnershipTransferred struct {
	PreviousOwner common.Address
	NewOwner      common.Address
	Raw           types.Log // Blockchain specific contextual infos
}

// FilterOwnershipTransferred is a free log retrieval operation binding the contract event 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0.
//
// Solidity: event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)
func (_SystemConfigGlobal *SystemConfigGlobalFilterer) FilterOwnershipTransferred(opts *bind.FilterOpts, previousOwner []common.Address, newOwner []common.Address) (*SystemConfigGlobalOwnershipTransferredIterator, error) {

	var previousOwnerRule []interface{}
	for _, previousOwnerItem := range previousOwner {
		previousOwnerRule = append(previousOwnerRule, previousOwnerItem)
	}
	var newOwnerRule []interface{}
	for _, newOwnerItem := range newOwner {
		newOwnerRule = append(newOwnerRule, newOwnerItem)
	}

	logs, sub, err := _SystemConfigGlobal.contract.FilterLogs(opts, "OwnershipTransferred", previousOwnerRule, newOwnerRule)
	if err != nil {
		return nil, err
	}
	return &SystemConfigGlobalOwnershipTransferredIterator{contract: _SystemConfigGlobal.contract, event: "OwnershipTransferred", logs: logs, sub: sub}, nil
}

// WatchOwnershipTransferred is a free log subscription operation binding the contract event 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0.
//
// Solidity: event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)
func (_SystemConfigGlobal *SystemConfigGlobalFilterer) WatchOwnershipTransferred(opts *bind.WatchOpts, sink chan<- *SystemConfigGlobalOwnershipTransferred, previousOwner []common.Address, newOwner []common.Address) (event.Subscription, error) {

	var previousOwnerRule []interface{}
	for _, previousOwnerItem := range previousOwner {
		previousOwnerRule = append(previousOwnerRule, previousOwnerItem)
	}
	var newOwnerRule []interface{}
	for _, newOwnerItem := range newOwner {
		newOwnerRule = append(newOwnerRule, newOwnerItem)
	}

	logs, sub, err := _SystemConfigGlobal.contract.WatchLogs(opts, "OwnershipTransferred", previousOwnerRule, newOwnerRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(SystemConfigGlobalOwnershipTransferred)
				if err := _SystemConfigGlobal.contract.UnpackLog(event, "OwnershipTransferred", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseOwnershipTransferred is a log parse operation binding the contract event 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0.
//
// Solidity: event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)
func (_SystemConfigGlobal *SystemConfigGlobalFilterer) ParseOwnershipTransferred(log types.Log) (*SystemConfigGlobalOwnershipTransferred, error) {
	event := new(SystemConfigGlobalOwnershipTransferred)
	if err := _SystemConfigGlobal.contract.UnpackLog(event, "OwnershipTransferred", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}
